---
title: "gamlss"
description: "This is a subtitle"
date: "2025-08-16"
--- 

<!--------------- my typical setup ----------------->

```{r}
#| label: setup
#| include: false
very_wide <- 500
wide <- 136
narrow <- 76
options(width = narrow)
cache_images <- TRUE
set.seed(1)

theme_custom <- function() {
  dark_rect <- ggplot2::element_rect(fill = "#666", color = "#666")
  lite_rect <- ggplot2::element_rect(fill = "#fff", color = "#fff")
  dark_text <- ggplot2::element_text(color = "#000")
  lite_text <- ggplot2::element_text(color = "#ddd")
  ggplot2::`%+replace%`(
    ggplot2::theme_bw(),
    ggplot2::theme(
      plot.margin = ggplot2::margin(18, 18, 18, 18),
      plot.background = dark_rect,
      legend.background = dark_rect,
      strip.background = ggplot2::element_rect(
        fill = "#333", 
        color = "#333"
      ),
      legend.key = dark_rect,
      panel.background = ggplot2::element_rect(
        fill = "#ddd", color = "#ddd"),
      plot.title = lite_text,
      plot.subtitle = lite_text,
      plot.caption = lite_text,
      axis.text.x = lite_text,
      axis.text.y = lite_text,
      axis.title.x = lite_text,
      axis.title.y = ggplot2::element_text(color = "#ddd", angle = 90), 
      legend.text = lite_text,
      legend.title = lite_text,
      strip.text = ggplot2::element_text(
        colour = "#ddd", 
        margin = ggplot2::margin(4.4, 4.4, 4.4, 4.4) 
      )
    ) 
  )
}
ggplot2::theme_set(theme_custom())
```

<!--------------- post begins here ----------------->

Okay, so in my [last post](/posts/2025-08-02_box-cox-power-exponential/) I was whining about the Box-Cox power exponential distribution, and promising that it would be followed by a new post whining about the [generalised additive model for location, shape and scale](https://en.wikipedia.org/wiki/Generalized_additive_model_for_location,_scale_and_shape) (GAMLSS). This is that post.

```{r}
#| label: load-packages
#| message: false
library(fs)
library(dplyr)
library(purrr)
library(haven)
library(readr)
library(tidyr)
library(gifski)
library(gamlss)
library(tibble)
library(ggplot2)
library(quartose)
library(rprojroot)
```

```{r}
#| label: directories
proj_root  <- find_root_file(criterion = has_file(".here"))
local_dir  <- path(proj_root, "nhanes")
data_dir   <- path(local_dir, "data")
output_dir <- path(local_dir, "output")
```

## NHANES

The NHANES [body measurements](https://wwwn.cdc.gov/nchs/nhanes/search/datapage.aspx?Component=Examination) and [demographics](https://wwwn.cdc.gov/nchs/nhanes/search/datapage.aspx?Component=Demographics) data sets. Brief summaries here:

```{r}
#| results: asis
#| message: false
#| label: nhanes-metadata
metadata <- list( 
  BMX  = read_csv(path(local_dir, "bmx-summary.csv"), show_col_types = FALSE),
  DEMO = read_csv(path(local_dir, "demo-summary.csv"), show_col_types = FALSE) 
)

quarto_tabset(metadata, level = 3)
```

Import the data:

```{r}
#| label: nhanes-import
# all demographics and body measurement files
demo_files <- dir_ls(path(data_dir, "demo"))
bmx_files  <- dir_ls(path(data_dir, "bmx"))

# read demographics file (selected variables only)
demos <- demo_files |> 
  map(\(xx) {
    dd <- read_xpt(xx) 
    if (!exists("RIDEXAGM", where = dd)) dd$RIDEXAGM <- NA_real_
    dd <- select(dd, SEQN, RIAGENDR, RIDAGEYR, RIDAGEMN, RIDEXAGM)
    dd
  }) |> 
  bind_rows(.id = "file_demo") |> 
  mutate(file_demo = path_file(file_demo)) |>
  left_join(metadata$DEMO, by = "file_demo") |>
  select(-description)

# read body measurements file (selected variables only)
bmxes <- bmx_files |> 
  map(\(xx) {
    dd <- read_xpt(xx) 
    dd <- select(dd, SEQN, BMXWT, BMXHT, BMXRECUM)
    dd
}) |> 
  bind_rows(.id = "file_bmx") |> 
  mutate(file_bmx = path_file(file_bmx)) |>
  left_join(metadata$BMX, by = "file_bmx") |>
  select(-description)

# join data sets, retaining only those rows where the
# required body measurements exist, and use nicer names
nhanes <- bmxes |>
  left_join(demos, by = c("SEQN", "cohort")) |>
  select(
    id          = SEQN,
    sex_s       = RIAGENDR, # sex/gender at screen (1 = M, 2 = F, . = NA)
    weight_kg_e = BMXWT,    # weight at exam
    height_cm_e = BMXHT,    # standing height at exam
    length_cm_e = BMXRECUM, # recumbent length at exam (0-47 months only)
    age_yr_s    = RIDAGEYR, # natal age at screening (years)
    age_mn_s    = RIDAGEMN, # natal age at screening (months; 0-24 mos only)
    age_mn_e    = RIDEXAGM, # natal age at exam (months; 0-19 years only)
    cohort
  )

# recumbent length and standing height are not equivalent; in the NHANES
# data when both are present for the same person, length is 1.02cm greater
# than height; in this context, a simple adjustment will suffice
length_to_height <- function(length_cm, adjust = 1.02) {
  length_cm - adjust
}

# additional preprocessing
nhanes <- nhanes |>
  mutate(
    sex_num = sex_s - 1, # rescale to 0 = M, 1 = F
    sex_fct = factor(sex_s, levels = 1:2, labels = c("male", "female")),
    age_mn = case_when(
      !is.na(age_mn_e) ~ age_mn_e, # use exam months if present
      !is.na(age_mn_s) ~ age_mn_s, # else use survey months
      TRUE ~ (age_yr_s * 12)       # else use age in years
    ),
    age_yr    = age_mn / 12,
    weight_kg = weight_kg_e,
    height_cm = case_when(
      !is.na(height_cm_e) ~ height_cm_e, # use height if it was measured
      !is.na(length_cm_e) ~ length_to_height(length_cm_e), # or convert length
      TRUE ~ NA_real_, # else missing
    )
  )

# retain only the to-be-used columns, and only those cases for which
# age, weight, height, and sex are all present; filter to age < 80
# because NHANES uses "80" to mean "80 and above" so the actual age
# is not known
ok <- function(x) !is.na(x)
nhanes <- nhanes |>
  select(id, sex_num, sex_fct, weight_kg, height_cm, age_mn, age_yr, cohort) |>
  filter(ok(sex_num), ok(weight_kg), ok(height_cm), ok(age_mn)) |>
  filter(age_yr < 80)

nhanes
```


## GAMLSS

```{r}
# maximum age used in gamlss modelling; this restriction is
# to ensure that the gamlss models are well-behaved over
# the age range of most interest (i.e. pediatric)
age_max_yr <- 40

# subsets used for gamlss training
nhanes_m <- nhanes |> filter(sex_fct == "male", age_yr <= age_max_yr)
nhanes_f <- nhanes |> filter(sex_fct == "female", age_yr <= age_max_yr)

# gamlss settings that turned out not to matter much in this case
opt_control <- gamlss.control(c.crit = .001, n.cyc = 250)
```


```{r}
#| label: gamlss-height-models
#| eval: false
ht_m <- gamlss(
  formula       = height_cm ~ ps(age_mn),
  sigma.formula = ~ps(age_mn),
  nu.formula    = ~1,
  tau.formula   = ~1,
  data    = nhanes_m,
  family  = BCPE,
  control = opt_control
)

ht_f <- gamlss(
  formula       = height_cm ~ ps(age_mn),
  sigma.formula = ~ps(age_mn),
  nu.formula    = ~1,
  tau.formula   = ~1,
  data    = nhanes_f,
  family  = BCPE,
  control = opt_control
)
```

```{r}
#| label: gamlss-weight-models
#| eval: false
wt_htm <- gamlss(
  formula       = weight_kg ~ ps(age_mn) + height_cm + ps(age_mn):height_cm,
  sigma.formula = ~ps(age_mn),
  nu.formula    = ~1,
  tau.formula   = ~1,
  data    = nhanes_m,
  family  = BCPE,
  control = opt_control
)

wt_htf <- gamlss(
  formula       = weight_kg ~ ps(age_mn) + height_cm + ps(age_mn):height_cm,
  sigma.formula = ~ps(age_mn),
  nu.formula    = ~1,
  tau.formula   = ~1,
  data    = nhanes_f,
  family  = BCPE,
  control = opt_control
)
```

```{r}
#| label: gamlss-objects
#| results: asis
ht_m   <- readRDS(path(output_dir, "ht-m-v03.rds"))
ht_f   <- readRDS(path(output_dir, "ht-f-v03.rds"))
wt_htm <- readRDS(path(output_dir, "wt-htm-v03.rds"))
wt_htf <- readRDS(path(output_dir, "wt-htf-v03.rds"))

mod <- list(
  ht_m = ht_m,
  ht_f = ht_f,
  wt_htm = wt_htm,
  wt_htf = wt_htf
)

quarto_tabset(mod, level = 3)
```


```{r}
#| label: height-quantiles
get_pars <- function(data, model) {
  pars <- tibble(
    mu    = predict(model, newdata = data, type = "response", what = "mu"),
    sigma = predict(model, newdata = data, type = "response", what = "sigma"),
    nu    = predict(model, newdata = data, type = "response", what = "nu"),
    tau   = predict(model, newdata = data, type = "response", what = "tau"),
  )
  bind_cols(data, pars)
}

predict_cases <- expand_grid(
  age_mn  = 1:(age_max_yr * 12),
  sex_fct = factor(c("male", "female"))
)

predict_pars <- bind_rows(
  predict_cases |> filter(sex_fct == "male") |> get_pars(ht_m),
  predict_cases |> filter(sex_fct == "female") |> get_pars(ht_f)
)

predict_quantiles <- predict_pars |>
  mutate(
    q05 = qBCPE(.05, mu = mu, sigma = sigma, nu = nu, tau = tau),
    q25 = qBCPE(.25, mu = mu, sigma = sigma, nu = nu, tau = tau),
    q50 = qBCPE(.50, mu = mu, sigma = sigma, nu = nu, tau = tau),
    q75 = qBCPE(.75, mu = mu, sigma = sigma, nu = nu, tau = tau),
    q95 = qBCPE(.95, mu = mu, sigma = sigma, nu = nu, tau = tau)
  )

predict_quantiles
```

```{r}
#| label: height-quantiles-plot
#| fig-width: 8
#| fig-height: 6
ggplot() + 
  geom_point(
    data = nhanes |> filter(age_yr < age_max_yr), 
    mapping = aes(age_mn, height_cm),
    size = .25
  ) +
  geom_path(
    data = predict_quantiles |> 
      pivot_longer(
        cols = starts_with("q"),
        names_to = "quantile",
        values_to = "height_cm"
      ),
    mapping = aes(age_mn, height_cm, color = quantile)
  ) +
  facet_wrap(~sex_fct) +
  theme(legend.position = "bottom")
```

