---
title: "Baby got back references"
description: "Now I have \\\\2 problems"
date: "2024-11-26"
image: "feather2.jpg"
--- 

<!--------------- my typical setup ----------------->

```{r}
#| label: setup
#| include: false
very_wide <- 500
wide <- 136
narrow <- 76
options(width = narrow)
cache_images <- TRUE
set.seed(1)
```

```{r}
#| eval: false
#| echo: false

# I originally intended to use this, but didn't
highlight <- function(x) {
  stringr::str_replace_all(
    string = x,
    pattern = "\\<([^<>]+)\\>", 
    replacement = "<span style='color:#008080'>&lt;\\1&gt;</span>"
  )
}

knitr::knit_hooks$set(
  output = function(x, options) {
    if (options$highlight == TRUE) {
      return(c("<pre>", highlight(x), "</pre>"))
    } 
    c("<pre>", x, "</pre>")
  }
)

knitr::opts_chunk$set(highlight = TRUE)
```

```{css, echo=FALSE}
@import url('https://fonts.googleapis.com/css2?family=Tangerine:wght@400;700&display=swap');

.tangerine-regular {
  font-family: "Tangerine", cursive;
  font-weight: 400;
  font-style: normal;
}

.tangerine-bold {
  font-family: "Tangerine", cursive;
  font-weight: 700;
  font-style: normal;
}
```

<!--------------- post begins here ----------------->

At least once a week I have this moment when a yawning pit of black despair opens at my feet, and the barbed tentacles of despair wrap around my legs, poison injects chill into my veins, the icy claws of anxiety rip through my viscera, and a withered voice of pure evil slithers into my brain and speaks to me in the disturbingly-seductive language of Mordor:

<p class="tangerine-bold" align="center" style="font-size: 28pt">why not write a regular expression for this?</p>

I try to resist. I'm a good girl, I tell the Dark Lord. I write *readable* code. I write *maintainable* code. I kinda prefer it when my own code does not reduce me to a broken shivering wreck. Besides, I would never. Not on a first date anyway. Well, buy a girl a drink first maybe? And... oh it's so cold outside and honestly Sauron is kinda hot. Have you not watched Rings of Power? Sometimes a girl has needs.

Um. Anyway. What was I talking about?

<br>

## Oh, not another take

So let's be very clear on what this post is not. It is not a tutorial on regular expressions. The world doesn't need another one of those. It is not an opinion piece on regular expressions. The world *definitely* doesn't need another one of those. It's something far more important than either. It is a thinly-veiled excuse for me to post Sabrina Carpenter lyrics.

```{r}
feather <- tibble::tibble(original = brio::read_lines("feather.txt"))

rules <- tibble::tribble(
              ~pattern, ~replacement,
    "([Dd]o)(-[Dd]o)+",         "🎶", # do-do, do-do-do -> musical note
             "feather",         "🪶", # feather -> emoji feather
                "wine",         "🍷", # wine -> emoji wine
         "\\([Aa]h\\)",      "...😌", # (ah) -> ...emoji relief
  "\\[([^\\[\\]]+)\\]",          "~"  # replace square bracketed text
)

str_rewrite <- function(string, rules) {
  purrr::reduce2(
    .x = rules$pattern, 
    .y = rules$replacement, 
    .f = stringr::str_replace_all, 
    .init = string
  )
}

feather$updated <- str_rewrite(feather$original, rules)
feather
```

<br> 

::: {layout-ncol=2}

![When I try to write a regular expression](feather1.jpg)

![When the regular expression encounters a string](feather2.jpg)

:::


## I'm so sorry for my loss


```{r}
cat(feather$updated, sep = "\n")
```


## Whatever you're a waste of time

```{r}
any_pattern <- \(p) paste0("(", p, ")", collapse = "|")

feather |> 
  dplyr::mutate(
    line = dplyr::row_number(),
    match = stringr::str_extract_all(original, any_pattern(rules$pattern))
  ) |> 
  tidyr::unnest_longer("match") |> 
  dplyr::count(line, match)
```


