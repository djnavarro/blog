---
title: "quarto-syntax-from-r"
description: "This is a subtitle"
date: "2025-06-27"
categories: ["Quarto", "Literate Programming", "R"]
--- 

<!--------------- my typical setup ----------------->

```{r}
#| label: setup
#| include: false
very_wide <- 500
wide <- 136
narrow <- 76
options(width = narrow)
cache_images <- TRUE
set.seed(1)
ggplot2::theme_set(ggplot2::theme_bw())
```

<!--------------- post begins here ----------------->

```{r}
#| label: packages
#| message: false
library(knitr)
library(dplyr)
library(purrr)
library(tibble)
library(stringr)
library(ggplot2)
library(quartose)
library(babynames)
library(janeaustenr)
```

## Tabs and sections

### Printing in a loop

```{r}
#| label: tabs-and-headers
#| results: asis
for(bb in c("Danielle", "Jasmine")) {
  dat <- babynames |> filter(name == bb)
  pic <- ggplot(dat, aes(year, prop, fill = sex)) + geom_col()
  knit_print(quarto_tabset(
    .content = list("Plot" = pic, "Data" = dat), 
    .title = bb,
    .level = 4
  ))
}
```

### Printing as a group

```{r}
#| label: tabs-and-headers-2
#| results: asis
bbs <- paste0("Dan", c("", "i", "ni", "ny", "iel", "ielle", "iela"))
dat <- map(bbs, \(bb) filter(babynames, name == bb))
pic <- map(dat, \(dd) ggplot(dd, aes(year, prop, fill = sex)) + geom_col())
quarto_output(
  quarto_tabset(.content = pic, .names = bbs, .title = "Plot", .level = 4),
  quarto_tabset(.content = dat, .names = bbs, .title = "Data", .level = 4)
)
```

## Divs and spans

```{r}
#| label: div
#| results: asis
quarto_div(
  .content = list(
    "This is some margin text.", 
    "The strings are pasted together,",
    "with a separator"
  ),
  .class = "column-margin",
  .sep = " "
)
quarto_div(
  .content = list(
    "This is a callout note.",
    "The idea is the same, really."
  ),
  .class = "callout-note",
  .sep = " "
)
```

```{r}
#| label: span
#| results: asis
quarto_span(.content = "this is highlighted", .class = "mark")

quarto_div(
  .content = list(
    quarto_span(.content = "this is plain text"),
    quarto_span(.content = "this is highlighted", .class = "mark"),
    quarto_span(.content = "this is underlined", .class = "underline")
  ),
  .sep = ", "
)
```

## Raw markdown

```{r}
#| label: raw-1
#| results: asis
quarto_markdown(
  "- this ends up being",
  "- a markdown list", 
  "- with **formatting**",
  .sep = "\n"
)
```

```{r}
#| label: raw-2
#| results: asis
quarto_markdown(!!!c(">", prideprejudice[8:16]), .sep = " ")
```


