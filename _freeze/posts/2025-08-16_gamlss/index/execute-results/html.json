{
  "hash": "e078324a00ac69a4757c9df31332b609",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"gamlss\"\ndescription: \"This is a subtitle\"\ndate: \"2025-08-16\"\n--- \n\n\n\n<!--------------- my typical setup ----------------->\n\n\n\n\n\n\n\n<!--------------- post begins here ----------------->\n\nOkay, so in my [last post](/posts/2025-08-02_box-cox-power-exponential/) I was whining about the Box-Cox power exponential distribution, and promising that it would be followed by a new post whining about the [generalised additive model for location, shape and scale](https://en.wikipedia.org/wiki/Generalized_additive_model_for_location,_scale_and_shape) (GAMLSS). This is that post.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fs)\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(haven)\nlibrary(readr)\nlibrary(tidyr)\nlibrary(gifski)\nlibrary(gamlss)\nlibrary(tibble)\nlibrary(ggplot2)\nlibrary(quartose)\nlibrary(rprojroot)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nproj_root  <- find_root_file(criterion = has_file(\".here\"))\nlocal_dir  <- path(proj_root, \"nhanes\")\ndata_dir   <- path(local_dir, \"data\")\noutput_dir <- path(local_dir, \"output\")\n```\n:::\n\n\n\n## NHANES\n\nThe NHANES [body measurements](https://wwwn.cdc.gov/nchs/nhanes/search/datapage.aspx?Component=Examination) and [demographics](https://wwwn.cdc.gov/nchs/nhanes/search/datapage.aspx?Component=Demographics) data sets. Brief summaries here:\n\n\n\n\n```{.r .cell-code}\nmetadata <- list( \n  BMX  = read_csv(path(local_dir, \"bmx-summary.csv\"), show_col_types = FALSE),\n  DEMO = read_csv(path(local_dir, \"demo-summary.csv\"), show_col_types = FALSE) \n)\n\nquarto_tabset(metadata, level = 3)\n```\n\n\n\n::: {.panel-tabset}\n\n \n\n\n### BMX\n\n \n<pre> \n# A tibble: 12 × 3 \n   file_bmx  cohort    description   \n   <chr>     <chr>     <chr>         \n 1 BMX.xpt   1999-2000 body measures \n 2 BMX_B.xpt 2001-2002 body measures \n 3 BMX_C.xpt 2003-2004 body measures \n 4 BMX_D.xpt 2005-2006 body measures \n 5 BMX_E.xpt 2007-2008 body measures \n 6 BMX_F.xpt 2009-2010 body measures \n 7 BMX_G.xpt 2011-2012 body measures \n 8 BMX_H.xpt 2013-2014 body measures \n 9 BMX_I.xpt 2015-2016 body measures \n10 BMX_J.xpt 2017-2018 body measures \n11 BMX_L.xpt 2021-2023 body measures \n12 P_BMX.xpt 2017-2020 body measures \n</pre> \n\n\n### DEMO\n\n \n<pre> \n# A tibble: 12 × 3 \n   file_demo  cohort    description                     \n   <chr>      <chr>     <chr>                           \n 1 DEMO.xpt   1999-2000 demographics and sample weights \n 2 DEMO_B.xpt 2001-2002 demographics and sample weights \n 3 DEMO_C.xpt 2003-2004 demographics and sample weights \n 4 DEMO_D.xpt 2005-2006 demographics and sample weights \n 5 DEMO_E.xpt 2007-2008 demographics and sample weights \n 6 DEMO_F.xpt 2009-2010 demographics and sample weights \n 7 DEMO_G.xpt 2011-2012 demographics and sample weights \n 8 DEMO_H.xpt 2013-2014 demographics and sample weights \n 9 DEMO_I.xpt 2015-2016 demographics and sample weights \n10 DEMO_J.xpt 2017-2018 demographics and sample weights \n11 DEMO_L.xpt 2021-2023 demographics and sample weights \n12 P_DEMO.xpt 2017-2020 demographics and sample weights \n</pre> \n\n\n::: \n\n \n\n\n\nImport the data:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# all demographics and body measurement files\ndemo_files <- dir_ls(path(data_dir, \"demo\"))\nbmx_files  <- dir_ls(path(data_dir, \"bmx\"))\n\n# read demographics file (selected variables only)\ndemos <- demo_files |> \n  map(\\(xx) {\n    dd <- read_xpt(xx) \n    if (!exists(\"RIDEXAGM\", where = dd)) dd$RIDEXAGM <- NA_real_\n    dd <- select(dd, SEQN, RIAGENDR, RIDAGEYR, RIDAGEMN, RIDEXAGM)\n    dd\n  }) |> \n  bind_rows(.id = \"file_demo\") |> \n  mutate(file_demo = path_file(file_demo)) |>\n  left_join(metadata$DEMO, by = \"file_demo\") |>\n  select(-description)\n\n# read body measurements file (selected variables only)\nbmxes <- bmx_files |> \n  map(\\(xx) {\n    dd <- read_xpt(xx) \n    dd <- select(dd, SEQN, BMXWT, BMXHT, BMXRECUM)\n    dd\n}) |> \n  bind_rows(.id = \"file_bmx\") |> \n  mutate(file_bmx = path_file(file_bmx)) |>\n  left_join(metadata$BMX, by = \"file_bmx\") |>\n  select(-description)\n\n# join data sets, retaining only those rows where the\n# required body measurements exist, and use nicer names\nnhanes <- bmxes |>\n  left_join(demos, by = c(\"SEQN\", \"cohort\")) |>\n  select(\n    id          = SEQN,\n    sex_s       = RIAGENDR, # sex/gender at screen (1 = M, 2 = F, . = NA)\n    weight_kg_e = BMXWT,    # weight at exam\n    height_cm_e = BMXHT,    # standing height at exam\n    length_cm_e = BMXRECUM, # recumbent length at exam (0-47 months only)\n    age_yr_s    = RIDAGEYR, # natal age at screening (years)\n    age_mn_s    = RIDAGEMN, # natal age at screening (months; 0-24 mos only)\n    age_mn_e    = RIDEXAGM, # natal age at exam (months; 0-19 years only)\n    cohort\n  )\n\n# recumbent length and standing height are not equivalent; in the NHANES\n# data when both are present for the same person, length is 1.02cm greater\n# than height; in this context, a simple adjustment will suffice\nlength_to_height <- function(length_cm, adjust = 1.02) {\n  length_cm - adjust\n}\n\n# additional preprocessing\nnhanes <- nhanes |>\n  mutate(\n    sex_num = sex_s - 1, # rescale to 0 = M, 1 = F\n    sex_fct = factor(sex_s, levels = 1:2, labels = c(\"male\", \"female\")),\n    age_mn = case_when(\n      !is.na(age_mn_e) ~ age_mn_e, # use exam months if present\n      !is.na(age_mn_s) ~ age_mn_s, # else use survey months\n      TRUE ~ (age_yr_s * 12)       # else use age in years\n    ),\n    age_yr    = age_mn / 12,\n    weight_kg = weight_kg_e,\n    height_cm = case_when(\n      !is.na(height_cm_e) ~ height_cm_e, # use height if it was measured\n      !is.na(length_cm_e) ~ length_to_height(length_cm_e), # or convert length\n      TRUE ~ NA_real_, # else missing\n    )\n  )\n\n# retain only the to-be-used columns, and only those cases for which\n# age, weight, height, and sex are all present; filter to age < 80\n# because NHANES uses \"80\" to mean \"80 and above\" so the actual age\n# is not known\nok <- function(x) !is.na(x)\nnhanes <- nhanes |>\n  select(id, sex_num, sex_fct, weight_kg, height_cm, age_mn, age_yr, cohort) |>\n  filter(ok(sex_num), ok(weight_kg), ok(height_cm), ok(age_mn)) |>\n  filter(age_yr < 80)\n\nnhanes\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 113,319 × 8\n      id sex_num sex_fct weight_kg height_cm age_mn age_yr cohort   \n   <dbl>   <dbl> <fct>       <dbl>     <dbl>  <dbl>  <dbl> <chr>    \n 1     1       1 female       12.5      91.6     29   2.42 1999-2000\n 2     2       0 male         75.4     174      926  77.2  1999-2000\n 3     3       1 female       32.9     137.     125  10.4  1999-2000\n 4     4       0 male         13.3      86.1     22   1.83 1999-2000\n 5     5       0 male         92.5     178.     597  49.8  1999-2000\n 6     6       1 female       59.2     162      230  19.2  1999-2000\n 7     7       1 female       78       163.     712  59.3  1999-2000\n 8     8       0 male         40.7     162      159  13.2  1999-2000\n 9     9       1 female       45.5     157.     133  11.1  1999-2000\n10    10       0 male        112.      190.     518  43.2  1999-2000\n# ℹ 113,309 more rows\n```\n\n\n:::\n:::\n\n\n\n\n## GAMLSS\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# maximum age used in gamlss modelling; this restriction is\n# to ensure that the gamlss models are well-behaved over\n# the age range of most interest (i.e. pediatric)\nage_max_yr <- 40\n\n# subsets used for gamlss training\nnhanes_m <- nhanes |> filter(sex_fct == \"male\", age_yr <= age_max_yr)\nnhanes_f <- nhanes |> filter(sex_fct == \"female\", age_yr <= age_max_yr)\n\n# gamlss settings that turned out not to matter much in this case\nopt_control <- gamlss.control(c.crit = .001, n.cyc = 250)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nht_m <- gamlss(\n  formula       = height_cm ~ ps(age_mn),\n  sigma.formula = ~ps(age_mn),\n  nu.formula    = ~1,\n  tau.formula   = ~1,\n  data    = nhanes_m,\n  family  = BCPE,\n  control = opt_control\n)\n\nht_f <- gamlss(\n  formula       = height_cm ~ ps(age_mn),\n  sigma.formula = ~ps(age_mn),\n  nu.formula    = ~1,\n  tau.formula   = ~1,\n  data    = nhanes_f,\n  family  = BCPE,\n  control = opt_control\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwt_htm <- gamlss(\n  formula       = weight_kg ~ ps(age_mn) + height_cm + ps(age_mn):height_cm,\n  sigma.formula = ~ps(age_mn),\n  nu.formula    = ~1,\n  tau.formula   = ~1,\n  data    = nhanes_m,\n  family  = BCPE,\n  control = opt_control\n)\n\nwt_htf <- gamlss(\n  formula       = weight_kg ~ ps(age_mn) + height_cm + ps(age_mn):height_cm,\n  sigma.formula = ~ps(age_mn),\n  nu.formula    = ~1,\n  tau.formula   = ~1,\n  data    = nhanes_f,\n  family  = BCPE,\n  control = opt_control\n)\n```\n:::\n\n\n```{.r .cell-code}\nht_m   <- readRDS(path(output_dir, \"ht-m-v03.rds\"))\nht_f   <- readRDS(path(output_dir, \"ht-f-v03.rds\"))\nwt_htm <- readRDS(path(output_dir, \"wt-htm-v03.rds\"))\nwt_htf <- readRDS(path(output_dir, \"wt-htf-v03.rds\"))\n\nmod <- list(\n  ht_m = ht_m,\n  ht_f = ht_f,\n  wt_htm = wt_htm,\n  wt_htf = wt_htf\n)\n\nquarto_tabset(mod, level = 3)\n```\n\n\n\n::: {.panel-tabset}\n\n \n\n\n### ht_m\n\n \n<pre> \n \nFamily:  c(\"BCPE\", \"Box-Cox Power Exponential\")  \nFitting method: RS()  \n \nCall:   \ngamlss::gamlss(formula = height_cm ~ ps(age_mn), sigma.formula = ~ps(age_mn),   \n    nu.formula = ~1, tau.formula = ~1, family = gamlss.dist::BCPE,   \n    data = nhanes_m, control = gamlss::gamlss.control(c.crit = 0.001,   \n        n.cyc = 250))  \n \nMu Coefficients: \n(Intercept)   ps(age_mn)   \n    92.2738       0.2689   \nSigma Coefficients: \n(Intercept)   ps(age_mn)   \n -2.8598399   -0.0006718   \nNu Coefficients: \n(Intercept)   \n      1.676   \nTau Coefficients: \n(Intercept)   \n     0.6389   \n \n Degrees of Freedom for the fit: 12.22 Residual Deg. of Freedom   36792  \nGlobal Deviance:     247903  \n            AIC:     247927  \n            SBC:     248031  \n</pre> \n\n\n### ht_f\n\n \n<pre> \n \nFamily:  c(\"BCPE\", \"Box-Cox Power Exponential\")  \nFitting method: RS()  \n \nCall:   \ngamlss::gamlss(formula = height_cm ~ ps(age_mn), sigma.formula = ~ps(age_mn),   \n    nu.formula = ~1, tau.formula = ~1, family = gamlss.dist::BCPE,   \n    data = nhanes_f, control = gamlss::gamlss.control(c.crit = 0.001,   \n        n.cyc = 250))  \n \nMu Coefficients: \n(Intercept)   ps(age_mn)   \n    93.7475       0.2197   \nSigma Coefficients: \n(Intercept)   ps(age_mn)   \n -2.9007960   -0.0007036   \nNu Coefficients: \n(Intercept)   \n      1.253   \nTau Coefficients: \n(Intercept)   \n     0.6385   \n \n Degrees of Freedom for the fit: 12.24 Residual Deg. of Freedom   37631  \nGlobal Deviance:     247202  \n            AIC:     247227  \n            SBC:     247331  \n</pre> \n\n\n### wt_htm\n\n \n<pre> \n \nFamily:  c(\"BCPE\", \"Box-Cox Power Exponential\")  \nFitting method: RS()  \n \nCall:  gamlss::gamlss(formula = weight_kg ~ ps(age_mn) + height_cm +   \n    ps(age_mn):height_cm, sigma.formula = ~ps(age_mn),   \n    nu.formula = ~1, tau.formula = ~1, family = gamlss.dist::BCPE,   \n    data = nhanes_m, control = gamlss::gamlss.control(c.crit = 0.001,   \n        n.cyc = 500))  \n \nMu Coefficients: \n         (Intercept)            ps(age_mn)             height_cm   \n          -12.577136             -0.344534              0.316106   \nps(age_mn):height_cm   \n            0.002695   \nSigma Coefficients: \n(Intercept)   ps(age_mn)   \n  -2.121288     0.001741   \nNu Coefficients: \n(Intercept)   \n     -1.177   \nTau Coefficients: \n(Intercept)   \n      0.566   \n \n Degrees of Freedom for the fit: 14.17 Residual Deg. of Freedom   36790  \nGlobal Deviance:     246668  \n            AIC:     246696  \n            SBC:     246817  \n</pre> \n\n\n### wt_htf\n\n \n<pre> \n \nFamily:  c(\"BCPE\", \"Box-Cox Power Exponential\")  \nFitting method: RS()  \n \nCall:  gamlss::gamlss(formula = weight_kg ~ ps(age_mn) + height_cm +   \n    ps(age_mn):height_cm, sigma.formula = ~ps(age_mn),   \n    nu.formula = ~1, tau.formula = ~1, family = gamlss.dist::BCPE,   \n    data = nhanes_f, control = gamlss::gamlss.control(c.crit = 0.001,   \n        n.cyc = 500))  \n \nMu Coefficients: \n         (Intercept)            ps(age_mn)             height_cm   \n          -12.271387             -0.300860              0.301949   \nps(age_mn):height_cm   \n            0.002565   \nSigma Coefficients: \n(Intercept)   ps(age_mn)   \n  -2.096152     0.002104   \nNu Coefficients: \n(Intercept)   \n    -0.9629   \nTau Coefficients: \n(Intercept)   \n     0.7146   \n \n Degrees of Freedom for the fit: 14.29 Residual Deg. of Freedom   37629  \nGlobal Deviance:     257756  \n            AIC:     257784  \n            SBC:     257906  \n</pre> \n\n\n::: \n\n \n\n::: {.cell}\n\n```{.r .cell-code}\nget_pars <- function(data, model) {\n  pars <- tibble(\n    mu    = predict(model, newdata = data, type = \"response\", what = \"mu\"),\n    sigma = predict(model, newdata = data, type = \"response\", what = \"sigma\"),\n    nu    = predict(model, newdata = data, type = \"response\", what = \"nu\"),\n    tau   = predict(model, newdata = data, type = \"response\", what = \"tau\"),\n  )\n  bind_cols(data, pars)\n}\n\npredict_cases <- expand_grid(\n  age_mn  = 1:(age_max_yr * 12),\n  sex_fct = factor(c(\"male\", \"female\"))\n)\n\npredict_pars <- bind_rows(\n  predict_cases |> filter(sex_fct == \"male\") |> get_pars(ht_m),\n  predict_cases |> filter(sex_fct == \"female\") |> get_pars(ht_f)\n)\n\npredict_quantiles <- predict_pars |>\n  mutate(\n    q05 = qBCPE(.05, mu = mu, sigma = sigma, nu = nu, tau = tau),\n    q25 = qBCPE(.25, mu = mu, sigma = sigma, nu = nu, tau = tau),\n    q50 = qBCPE(.50, mu = mu, sigma = sigma, nu = nu, tau = tau),\n    q75 = qBCPE(.75, mu = mu, sigma = sigma, nu = nu, tau = tau),\n    q95 = qBCPE(.95, mu = mu, sigma = sigma, nu = nu, tau = tau)\n  )\n\npredict_quantiles\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 960 × 11\n   age_mn sex_fct    mu  sigma    nu   tau   q05   q25   q50   q75   q95\n    <int> <fct>   <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1      1 male     64.3 0.0676  1.68  1.89  56.8  61.4  64.3  67.1  71.2\n 2      2 male     65.2 0.0671  1.68  1.89  57.7  62.2  65.2  68.1  72.2\n 3      3 male     66.1 0.0666  1.68  1.89  58.6  63.1  66.1  69.0  73.1\n 4      4 male     67.0 0.0662  1.68  1.89  59.4  64.0  67.0  69.9  74.1\n 5      5 male     67.9 0.0657  1.68  1.89  60.3  64.9  67.9  70.8  75.0\n 6      6 male     68.8 0.0652  1.68  1.89  61.1  65.8  68.8  71.7  76.0\n 7      7 male     69.7 0.0648  1.68  1.89  62.0  66.7  69.7  72.7  76.9\n 8      8 male     70.6 0.0643  1.68  1.89  62.8  67.5  70.6  73.6  77.8\n 9      9 male     71.5 0.0639  1.68  1.89  63.7  68.4  71.5  74.5  78.8\n10     10 male     72.4 0.0635  1.68  1.89  64.5  69.3  72.4  75.4  79.7\n# ℹ 950 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() + \n  geom_point(\n    data = nhanes |> filter(age_yr < age_max_yr), \n    mapping = aes(age_mn, height_cm),\n    size = .25\n  ) +\n  geom_path(\n    data = predict_quantiles |> \n      pivot_longer(\n        cols = starts_with(\"q\"),\n        names_to = \"quantile\",\n        values_to = \"height_cm\"\n      ),\n    mapping = aes(age_mn, height_cm, color = quantile)\n  ) +\n  facet_wrap(~sex_fct) +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/height-quantiles-plot-1.png){width=768}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}