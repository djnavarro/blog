{
  "hash": "c9db0f722eefa8aad44f3e3ff44ddc6f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"gamlss\"\ndescription: \"This is a subtitle\"\ndate: \"2025-08-16\"\nknitr:\n  opts_chunk: \n    dev.args:\n      bg: \"#00000000\"\n--- \n\n\n\n<!--------------- my typical setup ----------------->\n\n\n\n\n\n\n\n<!--------------- post begins here ----------------->\n\nOkay, so in my [last post](/posts/2025-08-02_box-cox-power-exponential/) I was whining about the Box-Cox power exponential distribution, and promising that it would be followed by a new post whining about the [generalised additive model for location, shape and scale](https://en.wikipedia.org/wiki/Generalized_additive_model_for_location,_scale_and_shape) (GAMLSS). This is that post.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fs)\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(haven)\nlibrary(readr)\nlibrary(tidyr)\nlibrary(gifski)\nlibrary(gamlss)\nlibrary(tibble)\nlibrary(ggplot2)\nlibrary(quartose)\nlibrary(rprojroot)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nproj_root  <- find_root_file(criterion = has_file(\".here\"))\nlocal_dir  <- path(proj_root, \"nhanes\")\ndata_dir   <- path(local_dir, \"data\")\noutput_dir <- path(local_dir, \"output\")\n```\n:::\n\n\n\n## NHANES\n\nThe NHANES [body measurements](https://wwwn.cdc.gov/nchs/nhanes/search/datapage.aspx?Component=Examination) and [demographics](https://wwwn.cdc.gov/nchs/nhanes/search/datapage.aspx?Component=Demographics) data sets. Brief summaries here:\n\n\n\n\n```{.r .cell-code}\nmetadata <- list( \n  BMX  = read_csv(path(local_dir, \"bmx-summary.csv\"), show_col_types = FALSE),\n  DEMO = read_csv(path(local_dir, \"demo-summary.csv\"), show_col_types = FALSE) \n)\n\nquarto_tabset(metadata, level = 3)\n```\n\n\n\n::: {.panel-tabset}\n\n \n\n\n### BMX\n\n \n<pre> \n# A tibble: 12 × 3 \n   file_bmx  cohort    description   \n   <chr>     <chr>     <chr>         \n 1 BMX.xpt   1999-2000 body measures \n 2 BMX_B.xpt 2001-2002 body measures \n 3 BMX_C.xpt 2003-2004 body measures \n 4 BMX_D.xpt 2005-2006 body measures \n 5 BMX_E.xpt 2007-2008 body measures \n 6 BMX_F.xpt 2009-2010 body measures \n 7 BMX_G.xpt 2011-2012 body measures \n 8 BMX_H.xpt 2013-2014 body measures \n 9 BMX_I.xpt 2015-2016 body measures \n10 BMX_J.xpt 2017-2018 body measures \n11 BMX_L.xpt 2021-2023 body measures \n12 P_BMX.xpt 2017-2020 body measures \n</pre> \n\n\n### DEMO\n\n \n<pre> \n# A tibble: 12 × 3 \n   file_demo  cohort    description                     \n   <chr>      <chr>     <chr>                           \n 1 DEMO.xpt   1999-2000 demographics and sample weights \n 2 DEMO_B.xpt 2001-2002 demographics and sample weights \n 3 DEMO_C.xpt 2003-2004 demographics and sample weights \n 4 DEMO_D.xpt 2005-2006 demographics and sample weights \n 5 DEMO_E.xpt 2007-2008 demographics and sample weights \n 6 DEMO_F.xpt 2009-2010 demographics and sample weights \n 7 DEMO_G.xpt 2011-2012 demographics and sample weights \n 8 DEMO_H.xpt 2013-2014 demographics and sample weights \n 9 DEMO_I.xpt 2015-2016 demographics and sample weights \n10 DEMO_J.xpt 2017-2018 demographics and sample weights \n11 DEMO_L.xpt 2021-2023 demographics and sample weights \n12 P_DEMO.xpt 2017-2020 demographics and sample weights \n</pre> \n\n\n::: \n\n \n\n\n\nImport the data:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# all demographics and body measurement files\ndemo_files <- dir_ls(path(data_dir, \"demo\"))\nbmx_files  <- dir_ls(path(data_dir, \"bmx\"))\n\n# read demographics file (selected variables only)\ndemos <- demo_files |> \n  map(\\(xx) {\n    dd <- read_xpt(xx) \n    if (!exists(\"RIDEXAGM\", where = dd)) dd$RIDEXAGM <- NA_real_\n    dd <- select(dd, SEQN, RIAGENDR, RIDAGEYR, RIDAGEMN, RIDEXAGM)\n    dd\n  }) |> \n  bind_rows(.id = \"file_demo\") |> \n  mutate(file_demo = path_file(file_demo)) |>\n  left_join(metadata$DEMO, by = \"file_demo\") |>\n  select(-description)\n\n# read body measurements file (selected variables only)\nbmxes <- bmx_files |> \n  map(\\(xx) {\n    dd <- read_xpt(xx) \n    dd <- select(dd, SEQN, BMXWT, BMXHT, BMXRECUM)\n    dd\n}) |> \n  bind_rows(.id = \"file_bmx\") |> \n  mutate(file_bmx = path_file(file_bmx)) |>\n  left_join(metadata$BMX, by = \"file_bmx\") |>\n  select(-description)\n\n# join data sets, retaining only those rows where the\n# required body measurements exist, and use nicer names\nnhanes <- bmxes |>\n  left_join(demos, by = c(\"SEQN\", \"cohort\")) |>\n  select(\n    id          = SEQN,\n    sex_s       = RIAGENDR, # sex/gender at screen (1 = M, 2 = F, . = NA)\n    weight_kg_e = BMXWT,    # weight at exam\n    height_cm_e = BMXHT,    # standing height at exam\n    length_cm_e = BMXRECUM, # recumbent length at exam (0-47 months only)\n    age_yr_s    = RIDAGEYR, # natal age at screening (years)\n    age_mn_s    = RIDAGEMN, # natal age at screening (months; 0-24 mos only)\n    age_mn_e    = RIDEXAGM, # natal age at exam (months; 0-19 years only)\n    cohort\n  )\n\n# recumbent length and standing height are not equivalent; in the NHANES\n# data when both are present for the same person, length is 1.02cm greater\n# than height; in this context, a simple adjustment will suffice\nlength_to_height <- function(length_cm, adjust = 1.02) {\n  length_cm - adjust\n}\n\n# additional preprocessing\nnhanes <- nhanes |>\n  mutate(\n    sex_num = sex_s - 1, # rescale to 0 = M, 1 = F\n    sex_fct = factor(sex_s, levels = 1:2, labels = c(\"male\", \"female\")),\n    age_mn = case_when(\n      !is.na(age_mn_e) ~ age_mn_e, # use exam months if present\n      !is.na(age_mn_s) ~ age_mn_s, # else use survey months\n      TRUE ~ (age_yr_s * 12)       # else use age in years\n    ),\n    age_yr    = age_mn / 12,\n    weight_kg = weight_kg_e,\n    height_cm = case_when(\n      !is.na(height_cm_e) ~ height_cm_e, # use height if it was measured\n      !is.na(length_cm_e) ~ length_to_height(length_cm_e), # or convert length\n      TRUE ~ NA_real_, # else missing\n    )\n  )\n\n# retain only the to-be-used columns, and only those cases for which\n# age, weight, height, and sex are all present; filter to age < 80\n# because NHANES uses \"80\" to mean \"80 and above\" so the actual age\n# is not known\nok <- function(x) !is.na(x)\nnhanes <- nhanes |>\n  select(id, sex_num, sex_fct, weight_kg, height_cm, age_mn, age_yr, cohort) |>\n  filter(ok(sex_num), ok(weight_kg), ok(height_cm), ok(age_mn)) |>\n  filter(age_yr < 80)\n\nnhanes\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 113,319 × 8\n      id sex_num sex_fct weight_kg height_cm age_mn age_yr cohort   \n   <dbl>   <dbl> <fct>       <dbl>     <dbl>  <dbl>  <dbl> <chr>    \n 1     1       1 female       12.5      91.6     29   2.42 1999-2000\n 2     2       0 male         75.4     174      926  77.2  1999-2000\n 3     3       1 female       32.9     137.     125  10.4  1999-2000\n 4     4       0 male         13.3      86.1     22   1.83 1999-2000\n 5     5       0 male         92.5     178.     597  49.8  1999-2000\n 6     6       1 female       59.2     162      230  19.2  1999-2000\n 7     7       1 female       78       163.     712  59.3  1999-2000\n 8     8       0 male         40.7     162      159  13.2  1999-2000\n 9     9       1 female       45.5     157.     133  11.1  1999-2000\n10    10       0 male        112.      190.     518  43.2  1999-2000\n# ℹ 113,309 more rows\n```\n\n\n:::\n:::\n\n\n\n\n## GAMLSS\n\n### Estimation\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# maximum age used in gamlss modelling; this restriction is\n# to ensure that the gamlss models are well-behaved over\n# the age range of most interest (i.e. pediatric)\nage_max_yr <- 40\n\n# subsets used for gamlss training\nnhanes_m <- nhanes |> filter(sex_fct == \"male\", age_yr <= age_max_yr)\nnhanes_f <- nhanes |> filter(sex_fct == \"female\", age_yr <= age_max_yr)\n\n# gamlss settings that turned out not to matter much in this case\nopt_control <- gamlss.control(c.crit = .001, n.cyc = 250)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nht_m <- gamlss(\n  formula       = height_cm ~ ps(age_mn),\n  sigma.formula = ~ps(age_mn),\n  nu.formula    = ~1,\n  tau.formula   = ~1,\n  data    = nhanes_m,\n  family  = BCPE,\n  control = opt_control\n)\n\nht_f <- gamlss(\n  formula       = height_cm ~ ps(age_mn),\n  sigma.formula = ~ps(age_mn),\n  nu.formula    = ~1,\n  tau.formula   = ~1,\n  data    = nhanes_f,\n  family  = BCPE,\n  control = opt_control\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwt_htm <- gamlss(\n  formula       = weight_kg ~ ps(age_mn) + height_cm + ps(age_mn):height_cm,\n  sigma.formula = ~ps(age_mn),\n  nu.formula    = ~1,\n  tau.formula   = ~1,\n  data    = nhanes_m,\n  family  = BCPE,\n  control = opt_control\n)\n\nwt_htf <- gamlss(\n  formula       = weight_kg ~ ps(age_mn) + height_cm + ps(age_mn):height_cm,\n  sigma.formula = ~ps(age_mn),\n  nu.formula    = ~1,\n  tau.formula   = ~1,\n  data    = nhanes_f,\n  family  = BCPE,\n  control = opt_control\n)\n```\n:::\n\n\n```{.r .cell-code}\nht_m   <- readRDS(path(output_dir, \"ht-m-v03.rds\"))\nht_f   <- readRDS(path(output_dir, \"ht-f-v03.rds\"))\nwt_htm <- readRDS(path(output_dir, \"wt-htm-v03.rds\"))\nwt_htf <- readRDS(path(output_dir, \"wt-htf-v03.rds\"))\n\nmod <- list(\n  ht_m = ht_m,\n  ht_f = ht_f,\n  wt_htm = wt_htm,\n  wt_htf = wt_htf\n)\n\nquarto_tabset(mod, level = 3)\n```\n\n\n\n::: {.panel-tabset}\n\n \n\n\n### ht_m\n\n \n<pre> \n \nFamily:  c(\"BCPE\", \"Box-Cox Power Exponential\")  \nFitting method: RS()  \n \nCall:   \ngamlss::gamlss(formula = height_cm ~ ps(age_mn), sigma.formula = ~ps(age_mn),   \n    nu.formula = ~1, tau.formula = ~1, family = gamlss.dist::BCPE,   \n    data = nhanes_m, control = gamlss::gamlss.control(c.crit = 0.001,   \n        n.cyc = 250))  \n \nMu Coefficients: \n(Intercept)   ps(age_mn)   \n    92.2738       0.2689   \nSigma Coefficients: \n(Intercept)   ps(age_mn)   \n -2.8598399   -0.0006718   \nNu Coefficients: \n(Intercept)   \n      1.676   \nTau Coefficients: \n(Intercept)   \n     0.6389   \n \n Degrees of Freedom for the fit: 12.22 Residual Deg. of Freedom   36792  \nGlobal Deviance:     247903  \n            AIC:     247927  \n            SBC:     248031  \n</pre> \n\n\n### ht_f\n\n \n<pre> \n \nFamily:  c(\"BCPE\", \"Box-Cox Power Exponential\")  \nFitting method: RS()  \n \nCall:   \ngamlss::gamlss(formula = height_cm ~ ps(age_mn), sigma.formula = ~ps(age_mn),   \n    nu.formula = ~1, tau.formula = ~1, family = gamlss.dist::BCPE,   \n    data = nhanes_f, control = gamlss::gamlss.control(c.crit = 0.001,   \n        n.cyc = 250))  \n \nMu Coefficients: \n(Intercept)   ps(age_mn)   \n    93.7475       0.2197   \nSigma Coefficients: \n(Intercept)   ps(age_mn)   \n -2.9007960   -0.0007036   \nNu Coefficients: \n(Intercept)   \n      1.253   \nTau Coefficients: \n(Intercept)   \n     0.6385   \n \n Degrees of Freedom for the fit: 12.24 Residual Deg. of Freedom   37631  \nGlobal Deviance:     247202  \n            AIC:     247227  \n            SBC:     247331  \n</pre> \n\n\n### wt_htm\n\n \n<pre> \n \nFamily:  c(\"BCPE\", \"Box-Cox Power Exponential\")  \nFitting method: RS()  \n \nCall:  gamlss::gamlss(formula = weight_kg ~ ps(age_mn) + height_cm +   \n    ps(age_mn):height_cm, sigma.formula = ~ps(age_mn),   \n    nu.formula = ~1, tau.formula = ~1, family = gamlss.dist::BCPE,   \n    data = nhanes_m, control = gamlss::gamlss.control(c.crit = 0.001,   \n        n.cyc = 500))  \n \nMu Coefficients: \n         (Intercept)            ps(age_mn)             height_cm   \n          -12.577136             -0.344534              0.316106   \nps(age_mn):height_cm   \n            0.002695   \nSigma Coefficients: \n(Intercept)   ps(age_mn)   \n  -2.121288     0.001741   \nNu Coefficients: \n(Intercept)   \n     -1.177   \nTau Coefficients: \n(Intercept)   \n      0.566   \n \n Degrees of Freedom for the fit: 14.17 Residual Deg. of Freedom   36790  \nGlobal Deviance:     246668  \n            AIC:     246696  \n            SBC:     246817  \n</pre> \n\n\n### wt_htf\n\n \n<pre> \n \nFamily:  c(\"BCPE\", \"Box-Cox Power Exponential\")  \nFitting method: RS()  \n \nCall:  gamlss::gamlss(formula = weight_kg ~ ps(age_mn) + height_cm +   \n    ps(age_mn):height_cm, sigma.formula = ~ps(age_mn),   \n    nu.formula = ~1, tau.formula = ~1, family = gamlss.dist::BCPE,   \n    data = nhanes_f, control = gamlss::gamlss.control(c.crit = 0.001,   \n        n.cyc = 500))  \n \nMu Coefficients: \n         (Intercept)            ps(age_mn)             height_cm   \n          -12.271387             -0.300860              0.301949   \nps(age_mn):height_cm   \n            0.002565   \nSigma Coefficients: \n(Intercept)   ps(age_mn)   \n  -2.096152     0.002104   \nNu Coefficients: \n(Intercept)   \n    -0.9629   \nTau Coefficients: \n(Intercept)   \n     0.7146   \n \n Degrees of Freedom for the fit: 14.29 Residual Deg. of Freedom   37629  \nGlobal Deviance:     257756  \n            AIC:     257784  \n            SBC:     257906  \n</pre> \n\n\n::: \n\n \n\n\n\n### Quantiles\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_predictors <- function(model) {\n  outcome <- deparse(model$mu.formula[[2]])\n  all_vars <- unique(c(\n    all.vars(model$mu.formula),\n    all.vars(model$sigma.formula),\n    all.vars(model$nu.formula),\n    all.vars(model$tau.formula)\n  )) \n  setdiff(all_vars, outcome)\n}\n\nget_pars <- function(data, model) {\n  pars <- tibble(\n    mu    = predict(model, newdata = data, type = \"response\", what = \"mu\"),\n    sigma = predict(model, newdata = data, type = \"response\", what = \"sigma\"),\n    nu    = predict(model, newdata = data, type = \"response\", what = \"nu\"),\n    tau   = predict(model, newdata = data, type = \"response\", what = \"tau\"),\n  )\n  bind_cols(data, pars)\n}\n\npredict_cases_ht <- expand_grid(\n  age_mn  = 1:(age_max_yr * 12),\n  sex_fct = factor(c(\"male\", \"female\"))\n)\n\npredict_pars_ht <- bind_rows(\n  predict_cases_ht |> filter(sex_fct == \"male\") |> get_pars(ht_m),\n  predict_cases_ht |> filter(sex_fct == \"female\") |> get_pars(ht_f)\n)\n\npredict_quantiles_ht <- predict_pars_ht |>\n  mutate(\n    q05 = qBCPE(.05, mu = mu, sigma = sigma, nu = nu, tau = tau),\n    q25 = qBCPE(.25, mu = mu, sigma = sigma, nu = nu, tau = tau),\n    q50 = qBCPE(.50, mu = mu, sigma = sigma, nu = nu, tau = tau),\n    q75 = qBCPE(.75, mu = mu, sigma = sigma, nu = nu, tau = tau),\n    q95 = qBCPE(.95, mu = mu, sigma = sigma, nu = nu, tau = tau)\n  )\n\npredict_quantiles_ht\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 960 × 11\n   age_mn sex_fct    mu  sigma    nu   tau   q05   q25   q50   q75   q95\n    <int> <fct>   <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1      1 male     64.3 0.0676  1.68  1.89  56.8  61.4  64.3  67.1  71.2\n 2      2 male     65.2 0.0671  1.68  1.89  57.7  62.2  65.2  68.1  72.2\n 3      3 male     66.1 0.0666  1.68  1.89  58.6  63.1  66.1  69.0  73.1\n 4      4 male     67.0 0.0662  1.68  1.89  59.4  64.0  67.0  69.9  74.1\n 5      5 male     67.9 0.0657  1.68  1.89  60.3  64.9  67.9  70.8  75.0\n 6      6 male     68.8 0.0652  1.68  1.89  61.1  65.8  68.8  71.7  76.0\n 7      7 male     69.7 0.0648  1.68  1.89  62.0  66.7  69.7  72.7  76.9\n 8      8 male     70.6 0.0643  1.68  1.89  62.8  67.5  70.6  73.6  77.8\n 9      9 male     71.5 0.0639  1.68  1.89  63.7  68.4  71.5  74.5  78.8\n10     10 male     72.4 0.0635  1.68  1.89  64.5  69.3  72.4  75.4  79.7\n# ℹ 950 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() + \n  geom_point(\n    data = nhanes |> filter(age_yr < age_max_yr), \n    mapping = aes(age_mn, height_cm),\n    size = .25\n  ) +\n  geom_path(\n    data = predict_quantiles_ht |> \n      pivot_longer(\n        cols = starts_with(\"q\"),\n        names_to = \"quantile\",\n        values_to = \"height_cm\"\n      ),\n    mapping = aes(age_mn, height_cm, color = quantile)\n  ) +\n  facet_wrap(~sex_fct) +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/height-quantiles-plot-1.png){width=768}\n:::\n:::\n\n\n\nOkay, that's nice but you might argue that the GAMLSS modelling is overkill here. The distribution of heights conditional on age and sex is fairly close to normal, and in any case we have about 100k rows in the data set spanning the full range of ages. However, it's not too hard to construct a case where you really do need the model.\n\nWe can take the logic further and predict the distribution of weights for very tall (99th height percentile) and short (1st height percentile) people, stratified by age and sex. It's a nice illustration of where the GAMLSS framework is useful even when you have a lot of data: as good as it is, the NHANES data become very sparse when you start focusing on very thin slices through the tails of the distributions. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredict_cases_wt <- predict_pars_ht |>\n  mutate(\n    very_tall  = qBCPE(.99, mu = mu, sigma = sigma, nu = nu, tau = tau),\n    very_short = qBCPE(.01, mu = mu, sigma = sigma, nu = nu, tau = tau)\n  ) |> \n  pivot_longer(\n    cols = c(very_tall, very_short),\n    names_to = \"height_fct\", \n    values_to = \"height_cm\"\n  ) |> \n  mutate(height_fct = factor(height_fct)) |> \n  select(age_mn, sex_fct, height_fct, height_cm)\n\npredict_cases_wt\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,920 × 4\n   age_mn sex_fct height_fct height_cm\n    <int> <fct>   <fct>          <dbl>\n 1      1 male    very_tall       74.0\n 2      1 male    very_short      53.4\n 3      2 male    very_tall       75.0\n 4      2 male    very_short      54.2\n 5      3 male    very_tall       76.0\n 6      3 male    very_short      55.1\n 7      4 male    very_tall       77.0\n 8      4 male    very_short      55.9\n 9      5 male    very_tall       77.9\n10      5 male    very_short      56.8\n# ℹ 1,910 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\npredict_pars_wt <- bind_rows(\n  predict_cases_wt |> filter(sex_fct == \"male\") |> select(-height_fct) |> get_pars(wt_htm),\n  predict_cases_wt |> filter(sex_fct == \"female\") |> select(-height_fct) |> get_pars(wt_htf)\n) |> \n  left_join(predict_cases_wt, by = join_by(age_mn, sex_fct, height_cm)) |> \n  relocate(height_fct, .before = height_cm)\n\npredict_quantiles_wt <- predict_pars_wt |>\n  mutate(\n    q05 = qBCPE(.05, mu = mu, sigma = sigma, nu = nu, tau = tau),\n    q25 = qBCPE(.25, mu = mu, sigma = sigma, nu = nu, tau = tau),\n    q50 = qBCPE(.50, mu = mu, sigma = sigma, nu = nu, tau = tau),\n    q75 = qBCPE(.75, mu = mu, sigma = sigma, nu = nu, tau = tau),\n    q95 = qBCPE(.95, mu = mu, sigma = sigma, nu = nu, tau = tau)\n  )\n\npredict_quantiles_wt\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,920 × 13\n   age_mn sex_fct height_fct height_cm    mu  sigma    nu   tau   q05   q25\n    <int> <fct>   <fct>          <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl>\n 1      1 male    very_tall       74.0 11.2  0.0876 -1.18  1.76  9.79 10.6 \n 2      1 male    very_short      53.4  4.62 0.0876 -1.18  1.76  4.04  4.37\n 3      2 male    very_tall       75.0 11.4  0.0881 -1.18  1.76  9.94 10.8 \n 4      2 male    very_short      54.2  4.69 0.0881 -1.18  1.76  4.10  4.44\n 5      3 male    very_tall       76.0 11.5  0.0885 -1.18  1.76 10.1  10.9 \n 6      3 male    very_short      55.1  4.77 0.0885 -1.18  1.76  4.17  4.51\n 7      4 male    very_tall       77.0 11.7  0.0890 -1.18  1.76 10.2  11.1 \n 8      4 male    very_short      55.9  4.85 0.0890 -1.18  1.76  4.24  4.59\n 9      5 male    very_tall       77.9 11.9  0.0895 -1.18  1.76 10.4  11.3 \n10      5 male    very_short      56.8  4.93 0.0895 -1.18  1.76  4.31  4.67\n# ℹ 1,910 more rows\n# ℹ 3 more variables: q50 <dbl>, q75 <dbl>, q95 <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npermitted <- predict_cases_wt |> \n  mutate(\n    height_cm_lo = height_cm * 0.99, \n    height_cm_hi = height_cm * 1.01\n  ) |> \n  select(age_mn, sex_fct, height_fct, height_cm_lo, height_cm_hi)\n\nmatch_rules <- join_by(\n  x$sex_fct == y$sex_fct, \n  x$age_mn == y$age_mn, \n  x$height_cm > y$height_cm_lo, \n  x$height_cm < y$height_cm_hi\n)\n\nnhanes_very_short <- semi_join(\n  x = nhanes, \n  y = permitted |> filter(height_fct == \"very_short\"),\n  by = match_rules\n)\n\nnhanes_very_tall <- semi_join(\n  x = nhanes, \n  y = permitted |> filter(height_fct == \"very_tall\"),\n  by = match_rules\n)\n\nnhanes_partial <- bind_rows(\n  very_short = nhanes_very_short,\n  very_tall = nhanes_very_tall,\n  .id = \"height_fct\"\n) |> mutate(height_fct = factor(height_fct))\n\nnhanes_partial\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,470 × 9\n   height_fct    id sex_num sex_fct weight_kg height_cm age_mn  age_yr\n   <fct>      <dbl>   <dbl> <fct>       <dbl>     <dbl>  <dbl>   <dbl>\n 1 very_short   299       1 female       20.9     118       99  8.25  \n 2 very_short   708       1 female       73.8     146.     313 26.1   \n 3 very_short   941       1 female       57.1     146.     262 21.8   \n 4 very_short  1012       0 male         38       141.     158 13.2   \n 5 very_short  1075       0 male         54.6     156.     237 19.8   \n 6 very_short  1112       1 female       57.6     148.     244 20.3   \n 7 very_short  1193       1 female       53.7     146.     213 17.8   \n 8 very_short  1575       1 female        4.5      52.7      1  0.0833\n 9 very_short  1802       0 male         72.2     157.     380 31.7   \n10 very_short  1886       0 male          4.9      53.7      1  0.0833\n# ℹ 1,460 more rows\n# ℹ 1 more variable: cohort <chr>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() + \n  geom_point(\n    data = nhanes_partial, \n    mapping = aes(age_mn, weight_kg),\n    size = .5\n  ) +\n  geom_path(\n    data = predict_quantiles_wt |> \n      pivot_longer(\n        cols = starts_with(\"q\"),\n        names_to = \"quantile\",\n        values_to = \"weight_kg\"\n      ),\n    mapping = aes(age_mn, weight_kg, color = quantile),\n    linewidth = 1\n  ) +\n  facet_grid(height_fct ~ sex_fct) +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/weight-quantiles-plot-1.png){width=768}\n:::\n:::\n\n\n\nWorks better than I would have expected. Note that the slight \"clumpiness\" of the NHANES data is partially tied to the slight misfit in the model at ~12 years. The data flatten out slightly faster than the model predictions, which has the effect that the curves are slightly below the data at that specific age. So if we slice through the data based on model-predicted 99th percentile, there will be more actual 12 year olds selected than other age groups.\n\n### Sampling \n\nSample height conditional on `age`, using an appropriate (sec-specific) gamlss model `ht_mod`. Similarly, we can sample weight conditional on `age` and `height` using a model. Note the use of a trimmed Box-Cox power-exponential: even with nu/tau parameters, the BCPE has support on non-biological values in the tails creating physically impossible outliers in large simulations. The default trim is 0.25% on either side, as compared to 3% for `nhanesgamlss::simwtage()`. \n  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsample_hw <- function(age_mn, sex_fct, mod) {\n\n  rTBCPE <- function(n, mu, sigma, nu, tau, trim = .0025) {\n    p <- runif(n, min = trim, max = 1 - trim)\n    if (any(mu <= 0)) mu[mu <= 0] <- 1E-6\n    if (any(sigma <= 0)) sigma[sigma <= 0] <- 1E-6\n    r <- qBCPE(p, mu = mu, sigma = sigma, nu = nu, tau = tau)\n    r\n  }\n  sample_h <- function(age_mn, ht_mod) {\n    tibble(age_mn) |> \n      get_pars(model = ht_mod) |> \n      select(mu, sigma, nu, tau) |> \n      pmap_dbl(\\(mu, sigma, nu, tau) rTBCPE(n = 1, mu, sigma, nu, tau))\n  }\n  sample_w <- function(age_mn, height_cm, wt_mod) {\n    tibble(age_mn, height_cm) |>\n      get_pars(model = wt_mod) |> \n      select(mu, sigma, nu, tau) |> \n      pmap_dbl(\\(mu, sigma, nu, tau) rTBCPE(n = 1, mu, sigma, nu, tau))\n  }\n\n  height_cm <- weight_kg <- numeric(length(age_mn))\n  mm <- sex_fct == \"male\"\n  ff <- sex_fct == \"female\"\n\n  if (any(mm)) height_cm[mm] <- sample_h(age_mn[mm], mod$ht_m)\n  if (any(ff)) height_cm[ff] <- sample_h(age_mn[ff], mod$ht_f)  \n  if (any(mm)) weight_kg[mm] <- sample_w(age_mn[mm], height_cm[mm], mod$wt_htm)\n  if (any(ff)) weight_kg[ff] <- sample_w(age_mn[ff], height_cm[ff], mod$wt_htf)\n  \n  tibble(age_mn, sex_fct, height_cm, weight_kg)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_fit <- bind_rows(nhanes_m, nhanes_f) |> arrange(age_mn)\n\nage_band <- function(age_mn) {\n  factor(\n    x = case_when(\n      age_mn <= 12 ~ 1,\n      age_mn > 12 & age_mn <= 24 ~ 2,\n      age_mn > 24 & age_mn <= 72 ~ 3,\n      age_mn > 72 & age_mn <= 144 ~ 4,\n      age_mn > 144 & age_mn <= 216 ~ 5,\n      age_mn > 216 ~ 6\n    ),\n    levels = 1:6,\n    labels = c(\n      \"<1 year\",\n      \"1-2 years\",\n      \"2-6 years\",\n      \"6-12 years\",\n      \"12-18 years\",\n      \">18 years\"\n    )\n  )\n}\n\npop <- bind_rows(\n  gamlss = sample_hw(nhanes_fit$age_mn, nhanes_fit$sex_fct, mod = mod),\n  nhanes = nhanes_fit |> select(age_mn, sex_fct, height_cm, weight_kg),\n  .id = \"source\"\n) |> mutate(age_band_fct = age_band(age_mn))\n\npop\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 148,894 × 6\n   source age_mn sex_fct height_cm weight_kg age_band_fct\n   <chr>   <dbl> <fct>       <dbl>     <dbl> <fct>       \n 1 gamlss      0 male         60.7      7.30 <1 year     \n 2 gamlss      0 male         62.0      6.45 <1 year     \n 3 gamlss      0 male         64.1      9.76 <1 year     \n 4 gamlss      0 male         68.9      8.74 <1 year     \n 5 gamlss      0 male         59.8      7.98 <1 year     \n 6 gamlss      0 male         68.6      9.68 <1 year     \n 7 gamlss      0 male         69.9     10.3  <1 year     \n 8 gamlss      0 male         65.1      7.22 <1 year     \n 9 gamlss      0 male         64.7      9.12 <1 year     \n10 gamlss      0 male         56.5      6.31 <1 year     \n# ℹ 148,884 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npop |>\n  ggplot(aes(height_cm, weight_kg, color = sex_fct)) + \n  geom_point(size = .25, alpha = .5) +\n  facet_grid(age_band_fct ~ source, scales = \"free_y\") +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/height-weight-age-band-scatterplot-1.png){width=768}\n:::\n:::\n\n\n\nOnce again this is a neat example, but it's mostly a validation of the GAMLSS model: it shows us the model does allow us to sample from the joint conditional density $P(\\mbox{weight}, \\mbox{height} | \\mbox{age}, \\mbox{sex})$. But by design the GAMLSS samples in `pop` are matched to the NHANES data on age and sex. Anything that we could do with the GAMLSS samples is something that we could have done with the NHANES samples directly. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompute_bsa <- function(height, weight, method = \"dubois\") {\n\n  w <- weight # numeric (kg)\n  h <- height # numeric (cm)\n\n  # Du Bois D, Du Bois EF (Jun 1916). \"A formula to estimate the approximate\n  # surface area if height and weight be known\". Archives of Internal Medicine\n  # 17 (6): 863-71. PMID 2520314.\n  if (method == \"dubois\") return(0.007184 * w^0.425 * h^0.725)\n\n  # Mosteller RD. \"Simplified calculation of body-surface area\". N Engl J Med\n  # 1987; 317:1098. PMID 3657876.\n  if (method == \"mosteller\") return(0.016667 * w^0.5 * h^0.5)\n\n  # Haycock GB, Schwartz GJ, Wisotsky DH \"Geometric method for measuring body\n  # surface area: A height-weight formula validated in infants, children and\n  # adults\" J Pediatr 1978, 93:62-66.\n  if (method == \"haycock\") return(0.024265 * w^0.5378 * h^0.3964)\n\n  # Gehan EA, George SL, Cancer Chemother Rep 1970, 54:225-235\n  if (method == \"gehan\") return(0.0235 * w^0.51456 * h^0.42246)\n\n  # Boyd, Edith (1935). The Growth of the Surface Area of the Human Body.\n  # University of Minnesota. The Institute of Child Welfare, Monograph Series,\n  # No. x. London: Oxford University Press\n  if (method == \"boyd\") return(0.03330 * w^(0.6157 - 0.0188 * log10(w)) * h^0.3)\n\n  # Fujimoto S, Watanabe T, Sakamoto A, Yukawa K, Morimoto K. Studies on the\n  # physical surface area of Japanese. 18. Calculation formulae in three stages\n  # over all ages. Nippon Eiseigaku Zasshi 1968;5:443-50.\n  if (method == \"fujimoto\") return(0.008883 * w^0.444 * h^0.663)\n\n  rlang::abort(\"unknown BSA method\")\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbsa_cutoff <- tibble(\n  height_cm = 60:110,\n  dubois = (0.5 / 0.007184 / (height_cm^0.725)) ^ (1/0.425),\n  haycock = (0.5 / 0.024265 / (height_cm^0.3964)) ^(1/0.5378)\n) |> \n  pivot_longer(\n    cols = c(dubois, haycock),\n    names_to = \"method\",\n    values_to = \"weight_kg\"\n  )\n\nbsa_pop <- pop |> \n  select(age_mn, age_band_fct, height_cm, weight_kg, sex_fct, source) |>\n  filter(age_mn <= 72) |>\n  mutate(\n    bsa_m2_dubois = compute_bsa(height_cm, weight_kg, method = \"dubois\"),\n    bsa_m2_haycock = compute_bsa(height_cm, weight_kg, method = \"haycock\")\n  ) |>\n  filter(bsa_m2_dubois > 0.5 | bsa_m2_haycock > 0.5) \n \nggplot() + \n  geom_point(\n    data = bsa_pop,\n    mapping = aes(height_cm, weight_kg, color = sex_fct), \n    size = .25\n  ) +\n  geom_path(\n    data = bsa_cutoff,\n    mapping = aes(height_cm, weight_kg, linetype = method)\n  ) +\n  facet_grid(age_band_fct ~ source, scales = \"free_y\") +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/height-weight-bsa-scatterplot-1.png){width=768}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}