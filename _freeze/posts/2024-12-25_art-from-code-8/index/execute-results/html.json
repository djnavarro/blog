{
  "hash": "9b062c8443ab3270040cb0fe1dc1378b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Art from code VIII: Wrap up\"\ndescription: \"This is a subtitle\"\ndate: \"2024-12-25\"\ncategories: [\"R\", \"Art\"]\nimage: \"lily-pad.png\"\nimage-alt: \"A heart shape with wavy strokes in pink, blue, and green\"\n--- \n\n\n\n<!--------------- my typical setup ----------------->\n\n\n\n\n\n\n\n<!--------------- post begins here ----------------->\n\n*A couple of years ago I gave an invited workshop called [art from code](https://art-from-code.netlify.app) at the 2022 rstudio::conf (now posit::conf) conference. As part of the workshop I wrote a lengthy series of notes on how to make generative art using R, all of which were released under a CC-BY licence. For a while now I'd been thinking I should do something with these notes. I considered writing a book, but in all honesty I don't have the spare capacity for a side-project of that scale these days. I can barely keep up with the workload at my day job as it is. So instead, I've decided that I'd port them over to this site as a series of blog posts. In doing so I've made a deliberate decision not to modify the original content too much (nobody loves it when an artist tries to \"improve\" the original, after all). All I've done is update the code to accommodate package changes since 2022, and some minor edits so that the images are legible when embedded in this blog (which is light-themed, and the original was dark-theme). Other than that, I've left it alone. This is the eighth and last post in that series.*\n\n- [Prelude](/posts/2024-12-18_art-from-code-1/)\n- [Spatial tricks with ambient](/posts/2024-12-19_art-from-code-2/)\n- [Polygon tricks](/posts/2024-12-20_art-from-code-3/)\n- [Shading tricks](/posts/2024-12-21_art-from-code-4/)\n- [Iterated function systems](/posts/2024-12-22_art-from-code-5/)\n- [Tiles and tessellations](/posts/2024-12-23_art-from-code-6/)\n- [Pixel filters](/posts/2024-12-24_art-from-code-7/)\n- [Epilogue](/posts/2024-12-25_art-from-code-8/)\n\nAnd so we come to the end. I've never loved writing endings. Beginnings feel natural to me: every human life begins in approximately the same state -- human embryos just aren't that different from one another in the big scheme of things -- but everyone follows a different trajectory. Lives end in a myriad of different ways, and there's not usually a coherent story to tell about them. Endings to books, articles, workshops, courses, etc ... either I'm unskilled at writing them, or technical writing just doesn't have a narrative structure that lends itself to tidy endings. \n\nOh well. \n\nStill, I have to write something on this page, and maybe it isn't a bad idea to take a step back and think about the role generative art can play in life, careers, and so on. \n\n## Icing the cake\n\nA little while back I had the good fortune to come across Mine Çetinkaya-Rundels wonderful slide deck on best practices when teaching data science, [\"Let them eat cake (first)!\"](https://speakerdeck.com/minecr/let-them-eat-cake-first-0a3bbf75-f6f1-42d5-8d2f-ac2ff741611f). In it, she talks about the importance of engaging learner interest in the topic early on. Very few people have ever been motivated to learn R by reading about operator precedence, functions as first class objects, or lazy evaluation. Whatever its other merits, I have never heard anyone argue the case that S4 is \"sexy\", or that the R internals manual really really made them love the language. That's not how this works. People want to be *delighted* by their tools. We like to *play*. Code that allows people to experience joy and do things love doing... it provides opportunities for growth, learning, and personal development.\n\nWhen I make art, my daughter Fiona is frequent collaborator and art critic. She was 6 when I started making generative art: she's now 9 *(Editor's note: well that's a lie... she's now 11)*. She's interested in what I do artistically because she likes to draw, and is fascinated by the fact that I draw with code. In fact, she's become curious about it enough that she has her own private repo on my GitHub account where -- with a little help from me -- she makes her own generative art. With her permission I'll share one of her pieces here. She doesn't use ggplot2 or ambient (yet!), but instead relies on the [jasmines package](https://jasmines.djnavarro.net/) I wrote to bundle up some of my art functions. Personally I don't use jasmines anymore because that package really doesn't do anything except provide a few canned tricks using ambient. But it *is* a handy package for people who aren't quite ready to dive into those packages.\n\nAnyway, this is \"Lily Pad\":\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# https://github.com/djnavarro/jasmines\nlibrary(jasmines)\nlibrary(dplyr)\n\ndat <- use_seed(769) |>\n  entity_heart(grain = 2000) |>\n  mutate(ind = 1:n()) |>\n  unfold_warp() |>\n  unfold_worley(scatter = TRUE) |>\n  unfold_breeze(\n    iterations = 100,\n    scale = .0005,\n    drift = 0,\n    fractal = ambient::billow,\n    octaves = 1\n  )  |>\n  mutate(val = ind + id * 50)\n\n# https://www.canva.com/colors/color-palettes/lily-leap/\nshades <- c(\"#40c69f\", \"#2e765e\",\"#d62b83\",\"#05234c\")\n\ndat |>\n  style_ribbon(\n    palette = palette_manual(shades),\n    colour = \"order\",\n    alpha = c(.25,.02),\n    background = \"grey90\",\n    type = \"segment\",\n    size = .4\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/lily-pad-1.png){fig-align='center' width=1800}\n:::\n:::\n\n\n\nIt's one of my favourite pieces of hers. Personally I love it, but maybe more importantly, she loved making it. Every time I find time to make art, she offers comments and critique, and when she's in the mood she writes her own code. \n\nI love this so much because so much of the world seems hellbent on convincing her that she can't accomplish \"technical\" things. No-one says it out loud, but looking at how content is designed for girls and boys it's pretty hard to escape the conclusion that there's a cultural bias towards misogyny that kicks in very early on. I mean, this was a girl who stole my copy of [Gaussian Processes for Machine Learning](http://gaussianprocess.org/) at age 5 and got me to teach her \"the maths with letters\". She's quite capable of doing these things, but over time she's become convinced that she's not good at mathematics. There's very little I can do about this as a parent: I can tell her these stories about her own past and about her abilities, yes, but she's swimming in the same cultural waters as the rest of us, and she picks things up. \n\nAnd yet... she codes. She codes because no-one has told her she can't. She codes because she loves it, because she can make beautiful things with it that appeal to *her* interests, and that motivates her to continue.\n\nAll this brings me back to Mine Çetinkaya-Rundels claim about pedagogy. If we want people to learn modern tools for data science, we should let them \"eat cake first\". Show them the delightful things first. Don't start classes by talking about operator precedence, start with ggplot2. Or... start with art. Okay it doesn't have to be art. But start with something that makes people feel happy to be in the room. It will make a difference to them.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}