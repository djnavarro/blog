{
  "hash": "50236c96cd3ef0ff7ac15adc482759af",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"quarto-syntax-from-r\"\ndescription: \"This is a subtitle\"\ndate: \"2025-06-27\"\ncategories: [\"Quarto\", \"Literate Programming\", \"R\"]\n--- \n\n\n\n<!--------------- my typical setup ----------------->\n\n\n\n\n\n\n\n<!--------------- post begins here ----------------->\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(knitr)\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(tibble)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(quartose)\nlibrary(babynames)\nlibrary(janeaustenr)\n```\n:::\n\n\n\n## Tabs and sections\n\n### Printing in a loop\n\n\n\n\n```{.r .cell-code}\nfor(bb in c(\"Danielle\", \"Jasmine\")) {\n  dat <- babynames |> filter(name == bb)\n  pic <- ggplot(dat, aes(year, prop, fill = sex)) + geom_col()\n  knit_print(quarto_tabset(\n    .content = list(\"Plot\" = pic, \"Data\" = dat), \n    .title = bb,\n    .level = 4\n  ))\n}\n```\n\n\n\n#### Danielle\n\n \n\n\n::: {.panel-tabset}\n\n \n\n\n##### Plot\n\n \n![](index_files/figure-html/tabs-and-headers-1.png){width=672}\n\n##### Data\n\n \n<pre> \n# A tibble: 129 × 5 \n    year sex   name         n       prop \n   <dbl> <chr> <chr>    <int>      <dbl> \n 1  1937 F     Danielle     9 0.00000817 \n 2  1938 F     Danielle    88 0.0000771  \n 3  1939 F     Danielle    72 0.0000635  \n 4  1940 F     Danielle    38 0.0000322  \n 5  1941 F     Danielle    65 0.0000522  \n 6  1942 F     Danielle    57 0.000041   \n 7  1943 F     Danielle    67 0.0000467  \n 8  1944 F     Danielle    67 0.0000490  \n 9  1945 F     Danielle    93 0.0000691  \n10  1946 F     Danielle   136 0.0000843  \n# ℹ 119 more rows \n</pre> \n\n\n::: \n\n \n\n\n#### Jasmine\n\n \n\n\n::: {.panel-tabset}\n\n \n\n\n##### Plot\n\n \n![](index_files/figure-html/tabs-and-headers-2.png){width=672}\n\n##### Data\n\n \n<pre> \n# A tibble: 124 × 5 \n    year sex   name        n       prop \n   <dbl> <chr> <chr>   <int>      <dbl> \n 1  1906 F     Jasmine     5 0.0000160  \n 2  1912 F     Jasmine     7 0.0000119  \n 3  1915 F     Jasmine     8 0.00000781 \n 4  1916 F     Jasmine     6 0.00000553 \n 5  1917 F     Jasmine     9 0.00000801 \n 6  1918 F     Jasmine     8 0.00000665 \n 7  1920 F     Jasmine     6 0.00000482 \n 8  1922 F     Jasmine     7 0.00000561 \n 9  1925 F     Jasmine    14 0.0000111  \n10  1927 F     Jasmine    13 0.0000105  \n# ℹ 114 more rows \n</pre> \n\n\n::: \n\n \n\n\n\n### Printing as a group\n\n\n\n\n```{.r .cell-code}\nbbs <- paste0(\"Dan\", c(\"\", \"i\", \"ni\", \"ny\", \"iel\", \"ielle\", \"iela\"))\ndat <- map(bbs, \\(bb) filter(babynames, name == bb))\npic <- map(dat, \\(dd) ggplot(dd, aes(year, prop, fill = sex)) + geom_col())\nquarto_group(list(\n  quarto_tabset(.content = pic, .names = bbs, .title = \"Plot\", .level = 4),\n  quarto_tabset(.content = dat, .names = bbs, .title = \"Data\", .level = 4)\n))\n```\n\n\n\n#### Plot\n\n \n\n\n::: {.panel-tabset}\n\n \n\n\n##### Dan\n\n \n![](index_files/figure-html/tabs-and-headers-2-1.png){width=672}\n\n##### Dani\n\n \n![](index_files/figure-html/tabs-and-headers-2-2.png){width=672}\n\n##### Danni\n\n \n![](index_files/figure-html/tabs-and-headers-2-3.png){width=672}\n\n##### Danny\n\n \n![](index_files/figure-html/tabs-and-headers-2-4.png){width=672}\n\n##### Daniel\n\n \n![](index_files/figure-html/tabs-and-headers-2-5.png){width=672}\n\n##### Danielle\n\n \n![](index_files/figure-html/tabs-and-headers-2-6.png){width=672}\n\n##### Daniela\n\n \n![](index_files/figure-html/tabs-and-headers-2-7.png){width=672}\n\n::: \n\n \n\n\n#### Data\n\n \n\n\n::: {.panel-tabset}\n\n \n\n\n##### Dan\n\n \n<pre> \n# A tibble: 206 × 5 \n    year sex   name      n     prop \n   <dbl> <chr> <chr> <int>    <dbl> \n 1  1880 M     Dan     140 0.00118  \n 2  1881 M     Dan     148 0.00137  \n 3  1882 M     Dan     150 0.00123  \n 4  1883 M     Dan     120 0.00107  \n 5  1884 M     Dan     151 0.00123  \n 6  1885 M     Dan     129 0.00111  \n 7  1886 M     Dan     154 0.00129  \n 8  1887 M     Dan     140 0.00128  \n 9  1888 M     Dan     154 0.00119  \n10  1889 M     Dan     116 0.000975 \n# ℹ 196 more rows \n</pre> \n\n\n##### Dani\n\n \n<pre> \n# A tibble: 136 × 5 \n    year sex   name      n       prop \n   <dbl> <chr> <chr> <int>      <dbl> \n 1  1942 F     Dani      5 0.0000036  \n 2  1945 F     Dani      6 0.00000446 \n 3  1946 F     Dani      9 0.00000558 \n 4  1947 F     Dani      5 0.00000275 \n 5  1947 M     Dani      5 0.00000269 \n 6  1948 F     Dani      8 0.00000459 \n 7  1949 F     Dani     13 0.00000741 \n 8  1949 M     Dani      6 0.00000333 \n 9  1950 F     Dani     15 0.00000853 \n10  1951 F     Dani      8 0.00000433 \n# ℹ 126 more rows \n</pre> \n\n\n##### Danni\n\n \n<pre> \n# A tibble: 78 × 5 \n    year sex   name      n       prop \n   <dbl> <chr> <chr> <int>      <dbl> \n 1  1948 F     Danni     5 0.00000287 \n 2  1949 F     Danni     5 0.00000285 \n 3  1951 F     Danni     5 0.00000271 \n 4  1953 M     Danni     5 0.0000025  \n 5  1955 F     Danni    49 0.0000244  \n 6  1956 F     Danni    43 0.0000209  \n 7  1956 M     Danni    11 0.00000513 \n 8  1957 F     Danni    21 0.0000100  \n 9  1958 F     Danni    18 0.00000872 \n10  1959 F     Danni    16 0.0000077  \n# ℹ 68 more rows \n</pre> \n\n\n##### Danny\n\n \n<pre> \n# A tibble: 207 × 5 \n    year sex   name      n      prop \n   <dbl> <chr> <chr> <int>     <dbl> \n 1  1900 M     Danny     7 0.0000432 \n 2  1901 M     Danny     8 0.0000692 \n 3  1902 M     Danny     9 0.0000678 \n 4  1903 M     Danny     5 0.0000387 \n 5  1904 M     Danny     7 0.0000505 \n 6  1905 M     Danny     5 0.0000349 \n 7  1907 M     Danny     7 0.0000441 \n 8  1908 M     Danny     8 0.0000481 \n 9  1909 M     Danny    10 0.0000565 \n10  1910 M     Danny    10 0.0000480 \n# ℹ 197 more rows \n</pre> \n\n\n##### Daniel\n\n \n<pre> \n# A tibble: 246 × 5 \n    year sex   name       n    prop \n   <dbl> <chr> <chr>  <int>   <dbl> \n 1  1880 M     Daniel   643 0.00543 \n 2  1881 M     Daniel   527 0.00487 \n 3  1882 M     Daniel   594 0.00487 \n 4  1883 M     Daniel   615 0.00547 \n 5  1884 M     Daniel   573 0.00467 \n 6  1885 M     Daniel   535 0.00461 \n 7  1886 M     Daniel   555 0.00466 \n 8  1887 M     Daniel   557 0.00510 \n 9  1888 M     Daniel   566 0.00436 \n10  1889 M     Daniel   515 0.00433 \n# ℹ 236 more rows \n</pre> \n\n\n##### Danielle\n\n \n<pre> \n# A tibble: 129 × 5 \n    year sex   name         n       prop \n   <dbl> <chr> <chr>    <int>      <dbl> \n 1  1937 F     Danielle     9 0.00000817 \n 2  1938 F     Danielle    88 0.0000771  \n 3  1939 F     Danielle    72 0.0000635  \n 4  1940 F     Danielle    38 0.0000322  \n 5  1941 F     Danielle    65 0.0000522  \n 6  1942 F     Danielle    57 0.000041   \n 7  1943 F     Danielle    67 0.0000467  \n 8  1944 F     Danielle    67 0.0000490  \n 9  1945 F     Danielle    93 0.0000691  \n10  1946 F     Danielle   136 0.0000843  \n# ℹ 119 more rows \n</pre> \n\n\n##### Daniela\n\n \n<pre> \n# A tibble: 88 × 5 \n    year sex   name        n       prop \n   <dbl> <chr> <chr>   <int>      <dbl> \n 1  1947 F     Daniela     8 0.0000044  \n 2  1952 F     Daniela     5 0.00000263 \n 3  1953 F     Daniela     5 0.00000259 \n 4  1954 F     Daniela     7 0.00000352 \n 5  1955 F     Daniela     7 0.00000349 \n 6  1956 F     Daniela     6 0.00000291 \n 7  1957 F     Daniela    10 0.00000477 \n 8  1958 F     Daniela    16 0.00000775 \n 9  1959 F     Daniela    14 0.00000674 \n10  1960 F     Daniela    25 0.0000120  \n# ℹ 78 more rows \n</pre> \n\n\n::: \n\n \n\n\n\n## Divs and spans\n\n\n\n\n```{.r .cell-code}\nquarto_div(\n  .content = \"This is some margin text.\", \n  .class = \"column-margin\"\n)\n```\n\n\n\n::: {.column-margin}\n\n This is some margin text. \n\n:::\n\n \n\n\n```{.r .cell-code}\nquarto_div(\n  .content = c(\n    \"Using character vectors is fine.\",\n    \"This is also just one margin text block.\", \n    \"All the strings get pasted together,\",\n    \"with a separator.\"\n  ),\n  .class = \"column-margin\",\n  .sep = \" /// \"\n)\n```\n\n\n\n::: {.column-margin}\n\n Using character vectors is fine.         /// This is also just one margin text block. /// All the strings get pasted together,     /// with a separator.                        \n\n:::\n\n \n\n\n```{.r .cell-code}\nquarto_div(\n  .content = list(\n    \"You can pass a list as the div content.\", \n    \"That allows you to mix content,\",\n    1:3,\n    c(\"of different types\", \"and lengths.\"),\n    \"But pay attention to where separators appear,\",\n    \"and remember that **markdown parsing still applies**\"\n  ),\n  .class = \"column-margin\",\n  .sep = \" /// \"\n)\n```\n\n\n\n::: {.column-margin}\n\n You can pass a list as the div content. /// That allows you to mix content, /// 1 /// 2 /// 3 /// of different types /// and lengths.       /// But pay attention to where separators appear, /// and remember that **markdown parsing still applies** \n\n:::\n\n \n\n\n```{.r .cell-code}\nquarto_div(\n  .content = \"This is a callout note.\",\n  .class = \"callout-note\"\n)\n```\n\n\n\n::: {.callout-note}\n\n This is a callout note. \n\n:::\n\n \n\n\n```{.r .cell-code}\nquarto_div(\n  .content = \"You can supply multiple classes\",\n  .class = c(\"column-margin\", \"callout-tip\")\n)\n```\n\n\n\n::: {.column-margin .callout-tip}\n\n You can supply multiple classes \n\n:::\n\n \n\n\n```{.r .cell-code}\nquarto_span(.content = \"this is highlighted\", .class = \"mark\")\n```\n\n[this is highlighted]{.mark} \n\n\n```{.r .cell-code}\nquarto_div(\n  .content = list(\n    quarto_span(.content = \"this is plain text\"),\n    quarto_span(.content = \"this is highlighted\", .class = \"mark\"),\n    quarto_span(.content = \"this is underlined\", .class = \"underline\")\n  ),\n  .sep = \", \"\n)\n```\n\n\n\n::: {.quartose-null}\n\n [this is plain text]{.quartose-null}, [this is highlighted]{.mark}, [this is underlined]{.underline} \n\n:::\n\n \n\n\n\n## Raw markdown\n\n\n\n\n```{.r .cell-code}\nquarto_markdown(\n  .content = c(\n    \"- this ends up being\",\n    \"- a markdown list\", \n    \"- with **formatting**\"\n  ),\n  .sep = \"\\n\"\n)\n```\n\n- this ends up being\n- a markdown list\n- with **formatting** \n\n\n```{.r .cell-code}\nquarto_markdown(c(\">\", prideprejudice[8:16]), .sep = \" \")\n```\n\n>   It is a truth universally acknowledged, that a single man in possession of a good fortune, must be in want of a wife.  However little known the feelings or views of such a man may be on his first entering a neighbourhood, this truth is so well fixed in the minds of the surrounding families, that he is considered the rightful property of some one or other of their daughters. \n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}