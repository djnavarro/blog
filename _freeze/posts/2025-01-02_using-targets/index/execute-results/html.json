{
  "hash": "63665a0d55e0342d61db4354e0204345",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Using targets\"\ndescription: \"Less painful than makefiles\"\ndate: \"2025-01-02\"\n--- \n\n\n\n<!--------------- my typical setup ----------------->\n\n\n\n\n\n\n\n<!--------------- post begins here ----------------->\n\nUseful links:\n\n- [targets package website](https://docs.ropensci.org/targets/)\n- [targets user manual](https://books.ropensci.org/targets/)\n\nUnhelpful links:\n\n- [balrogs and makefiles](/posts/2023-06-30_makefiles/)\n- [my shitty repo](https://github.com/djnavarro/tartoys)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(targets)\n```\n:::\n\n\n\n## Project 1: D&D spells\n\nThe first project is a fun [Tidy Tuesday](https://github.com/rfordatascience/tidytuesday/tree/main/data/2024/2024-12-17) project that makes these two images: \n\n::: {layout=\"[2,1]\" .column-page}\n\n![dice_pic.png](img/dice_pic.png)\n\n![scholastic_pic.png](img/scholastic_pic.png)\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfs::dir_tree(\"spells\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nspells\n├── _targets.R\n├── dice.R\n├── scholastic.R\n└── spells.csv\n```\n\n\n:::\n:::\n\n\n\n### Defining the pipeline\n\nThe nice thing about a targets workflow is that you can (sometimes) see the entire structure of the project just by looking at the `_targets.R` script:\n\n\n\n::: {.cell filename='_targets.R'}\n\n```{.r .cell-code  code-line-numbers=\"true\"}\n# packages used in the pipeline -------------------------------------------\n\nlibrary(targets)\n\ntar_option_set(\n  packages = c(\n    \"rprojroot\", \"fs\", \"tibble\", \"readr\",\n    \"ggplot2\", \"dplyr\", \"stringr\",\n    \"tidyr\", \"forcats\", \"ggrepel\",\n    \"legendry\"\n  )\n)\n\n# define functions for the pipeline ---------------------------------------\n\ntar_source(files = c(\"dice.R\", \"scholastic.R\"))\n\nset_output_dir <- function() {\n  root <- find_root(has_file(\"_targets.R\"))\n  output <- path(root, \"output\")\n  dir_create(output)\n  return(output)\n}\n\n# define the targets ------------------------------------------------------\n\nlist(\n  # preprocessing targets\n  tar_target(input, \"spells.csv\", format = \"file\"),\n  tar_target(output, set_output_dir()),\n  tar_target(spells, read_csv(input, show_col_types = FALSE)),\n\n  # dice plot targets\n  tar_target(dice_dat, dice_data(spells)),\n  tar_target(dice_pic, dice_plot(dice_dat, output)),\n\n  # scholastic plot targets\n  tar_target(scholastic_dat, scholastic_data(spells)),\n  tar_target(scholastic_clus, scholastic_clusters(scholastic_dat)),\n  tar_target(\n    scholastic_pic,\n    scholastic_plot(scholastic_dat, scholastic_clus, output)\n  )\n)\n```\n:::\n\n\n\nThere are three clear sections:\n\n- packages needed for the workflow\n- functions used to execute the workflow\n- the list of targets \n\nIt's not super relevant to the post, but here's the code defined in the `dice.R` and `scholastic.R` scripts. This code does all the work of building the plots, but I'm not going to dive into it in any detail here:\n\n::: {.callout-note icon=false title=\"Plotting code\"}\n\n\n\n::: {.cell filename='dice.R'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Click to show/hide the dice.R code\" code-line-numbers=\"true\"}\ndice_data <- function(spells) {\n  dice_dat <- spells |>\n    select(name, level, description) |>\n    mutate(\n      dice_txt = str_extract_all(description, \"\\\\b\\\\d+d\\\\d+\\\\b\"),\n      dice_txt = purrr::map(dice_txt, unique)\n    ) |>\n    unnest_longer(\n      col = \"dice_txt\",\n      values_to = \"dice_txt\",\n      indices_to = \"position\"\n    ) |>\n    mutate(\n      dice_num = dice_txt |> str_extract(\"\\\\d+(?=d)\") |> as.numeric(),\n      dice_die = dice_txt |> str_extract(\"(?<=d)\\\\d+\") |> as.numeric(),\n      dice_val = dice_num * (dice_die + 1)/2,\n      dice_txt = factor(dice_txt) |> fct_reorder(dice_val)\n    )\n  return(dice_dat)\n}\n\ndice_plot <- function(dice_dat, output) {\n\n  palette <- hcl.colors(n = 10, palette = \"PuOr\")\n\n  labs <- dice_dat |>\n    summarise(\n      dice_txt = first(dice_txt),\n      count = n(),\n      .by = dice_txt\n    )\n\n  pic <- ggplot(\n    data = dice_dat,\n    mapping = aes(\n      x = dice_txt,\n      fill = factor(level)\n    )\n  ) +\n    geom_bar(color = \"#222\") +\n    geom_label_repel(\n      data = labs,\n      mapping = aes(\n        x = dice_txt,\n        y = count,\n        label = dice_txt\n      ),\n      size = 3,\n      direction = \"y\",\n      seed = 1,\n      nudge_y = 4,\n      color = \"#ccc\",\n      fill = \"#222\",\n      arrow = NULL,\n      inherit.aes = FALSE\n    ) +\n    scale_fill_manual(\n      name = \"Spell level\",\n      values = palette\n    ) +\n    scale_x_discrete(\n      name = \"Increasing average outcome \\u27a1\",\n      breaks = NULL,\n      expand = expansion(.05)\n    ) +\n    scale_y_continuous(name = NULL) +\n    labs(\n      title = \"Frequency of dice rolls described in D&D spell descriptions, by spell level\",\n      subtitle = \"Or whatever\",\n      caption = \"Source: https://github.com/rfordatascience/tidytuesday/tree/main/data/2024/2024-12-17\"\n    ) +\n    theme_void() +\n    theme(\n      plot.background = element_rect(fill = \"#222\"),\n      text = element_text(color = \"#ccc\"),\n      axis.text = element_text(color = \"#ccc\"),\n      axis.title = element_text(color = \"#ccc\"),\n      plot.margin = unit(c(1, 1, 1, 1), units = \"cm\"),\n      legend.position = \"inside\",\n      legend.position.inside = c(.3, .825),\n      legend.direction = \"horizontal\",\n      legend.title.position = \"top\",\n      legend.byrow = TRUE\n    )\n\n  out <- path(output, \"dice_pic.png\")\n\n  ggsave(\n    filename = out,\n    plot = pic,\n    width = 2000,\n    height = 1000,\n    units = \"px\",\n    dpi = 150\n  )\n\n  return(out)\n}\n```\n:::\n\n::: {.cell filename='scholastic.R'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Click to show/hide the scholastic.R code\" code-line-numbers=\"true\"}\n# constructs the data frame used by geom_tile() later\nscholastic_data <- function(spells) {\n  spells |>\n    select(name, school, bard:wizard) |>\n    pivot_longer(\n      cols = bard:wizard,\n      names_to = \"class\",\n      values_to = \"castable\"\n    ) |>\n    summarise(\n      count = sum(castable),\n      .by = c(\"school\", \"class\")\n    ) |>\n    mutate(\n      school = str_to_title(school),\n      class  = str_to_title(class)\n    )\n}\n\n# hierarchical clustering for the schools and classes\nscholastic_clusters <- function(dat) {\n\n  # matrix of counts for each school/class combination\n  mat <- dat |>\n    pivot_wider(\n      names_from = \"school\",\n      values_from = \"count\"\n    ) |>\n    as.data.frame()\n  rownames(mat) <- mat$class\n  mat$class <- NULL\n  as.matrix(mat)\n\n  # each school is a distribution over classes,\n  # each class is a distribution over schools\n  class_distribution  <- mat / replicate(ncol(mat), rowSums(mat))\n  school_distribution <- t(mat) / (replicate(nrow(mat), colSums(mat)))\n\n  # pairwise distances\n  class_dissimilarity  <- dist(class_distribution)\n  school_dissimilarity <- dist(school_distribution)\n\n  # hierarchical clustering\n  clusters <- list(\n    class = hclust(class_dissimilarity, method = \"average\"),\n    school = hclust(school_dissimilarity, method = \"average\")\n  )\n\n  return(clusters)\n}\n\nscholastic_plot <- function(dat, clusters, output) {\n\n  pic <- ggplot(dat, aes(school, class, fill = count)) +\n    geom_tile() +\n    scale_x_dendro(\n      clust = clusters$school,\n      guide = guide_axis_dendro(n.dodge = 2),\n      expand = expansion(0, 0),\n      position = \"top\"\n    ) +\n    scale_y_dendro(\n      clust = clusters$class,\n      expand = expansion(0, 0)\n    ) +\n    scale_fill_distiller(palette = \"RdPu\") +\n    labs(\n      x = \"The Schools of Magic\",\n      y = \"The Classes of Character\",\n      fill = \"Number of Learnable Spells\"\n    ) +\n    coord_equal() +\n    theme(\n      plot.background = element_rect(fill = \"#222\", color = \"#222\"),\n      plot.margin = unit(c(2, 2, 2, 2), units = \"cm\"),\n      text = element_text(color = \"#ccc\"),\n      axis.text = element_text(color = \"#ccc\"),\n      axis.title = element_text(color = \"#ccc\"),\n      axis.ticks = element_line(color = \"#ccc\"),\n      legend.position = \"bottom\",\n      legend.background = element_rect(fill = \"#222\", color = \"#222\")\n    )\n\n  out <- path(output, \"scholastic_pic.png\")\n\n  ggsave(\n    filename = out,\n    plot = pic,\n    width = 1000,\n    height = 1000,\n    units = \"px\",\n    dpi = 150\n  )\n\n  return(out)\n}\n```\n:::\n\n\n\n:::\n\nblah blah blah. \n\nAs it happens, I have a copy of the project in the `spells` directory within this blog post, so we can in fact play with this project and see how targets operates. However, the project is designed to be a standalone, not part of a blog post, so I'll tweak my knitr settings so that code will now be executed from the `spells` subdirectory:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::opts_knit$set(\n  root.dir = here::here(\n    \"posts\", \n    \"2025-01-02_using-targets\",  \n    \"spells\"\n  )\n)\n```\n:::\n\n\n\n\n### Inspecting the pipeline\n\nThe `tar_visnetwork()` function provides a handy way of visualising the structure of a pipeline as a little HTML widget. By default it will show the dependencies between all functions and all targets, which is often totally fine, but I'm going to simplify it here by setting `targets_only = TRUE` (i.e., don't show the user-defined functions), and also set `exclude = c(\"input\", \"output\")` to ignore the two really boring pre-processing targets! \n\nI'm also going to set `physics = TRUE`, which you don't usually need, but in this case turns out to be handy because it pushes some of the vertices in the graph just far enough apart that you can see all the edges properly. \n\nAnyway, here it is:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntar_visnetwork(\n  targets_only = TRUE, \n  exclude = c(\"input\", \"output\"),\n  physics = TRUE\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-06484ed42468d86de4a4\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-06484ed42468d86de4a4\">{\"x\":{\"nodes\":{\"name\":[\"dice_dat\",\"dice_pic\",\"scholastic_clus\",\"scholastic_dat\",\"scholastic_pic\",\"spells\"],\"type\":[\"stem\",\"stem\",\"stem\",\"stem\",\"stem\",\"stem\"],\"description\":[null,null,null,null,null,null],\"status\":[\"outdated\",\"outdated\",\"outdated\",\"outdated\",\"outdated\",\"outdated\"],\"seconds\":[null,null,null,null,null,null],\"bytes\":[null,null,null,null,null,null],\"branches\":[null,null,null,null,null,null],\"label\":[\"dice_dat\",\"dice_pic\",\"scholastic_clus\",\"scholastic_dat\",\"scholastic_pic\",\"spells\"],\"color\":[\"#78B7C5\",\"#78B7C5\",\"#78B7C5\",\"#78B7C5\",\"#78B7C5\",\"#78B7C5\"],\"id\":[\"dice_dat\",\"dice_pic\",\"scholastic_clus\",\"scholastic_dat\",\"scholastic_pic\",\"spells\"],\"level\":[2,3,3,2,4,1],\"shape\":[\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\"]},\"edges\":{\"from\":[\"scholastic_dat\",\"spells\",\"scholastic_clus\",\"scholastic_dat\",\"dice_dat\",\"spells\"],\"to\":[\"scholastic_clus\",\"scholastic_dat\",\"scholastic_pic\",\"scholastic_pic\",\"dice_pic\",\"dice_dat\"],\"arrows\":[\"to\",\"to\",\"to\",\"to\",\"to\",\"to\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"physics\":true},\"manipulation\":{\"enabled\":false},\"edges\":{\"smooth\":{\"type\":\"cubicBezier\",\"forceDirection\":\"horizontal\"}},\"physics\":{\"stabilization\":false},\"interaction\":{\"zoomSpeed\":1},\"layout\":{\"hierarchical\":{\"enabled\":true,\"direction\":\"LR\"}}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false,\"style\":\"width: 150px; height: 26px\",\"useLabels\":true,\"main\":\"Select by id\"},\"byselection\":{\"enabled\":false,\"style\":\"width: 150px; height: 26px\",\"multiple\":false,\"hideColor\":\"rgba(200,200,200,0.5)\",\"highlight\":false},\"main\":{\"text\":\"\",\"style\":\"font-family:Georgia, Times New Roman, Times, serif;font-weight:bold;font-size:20px;text-align:center;\"},\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"highlight\":{\"enabled\":true,\"hoverNearest\":false,\"degree\":{\"from\":1,\"to\":1},\"algorithm\":\"hierarchical\",\"hideColor\":\"rgba(200,200,200,0.5)\",\"labelOnly\":true},\"collapse\":{\"enabled\":true,\"fit\":false,\"resetHighlight\":true,\"clusterOptions\":null,\"keepCoord\":true,\"labelSuffix\":\"(cluster)\"},\"legend\":{\"width\":0.2,\"useGroups\":false,\"position\":\"right\",\"ncol\":1,\"stepX\":100,\"stepY\":100,\"zoom\":true,\"nodes\":{\"label\":[\"Outdated\",\"Stem\"],\"color\":[\"#78B7C5\",\"#899DA4\"],\"shape\":[\"dot\",\"dot\"]},\"nodesToDataframe\":true},\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\nThis makes the structure of the project clear:\n\n- The `dice_pic` image depends only on the `dice_dat` data set, and the `dice_dat` data set is derived from the `spells` data frame\n- The `scholastic_pic` is a little more complicated because it depends on two data sets: there's the `scholastic_dat` data set that is derived directly from `spells`, but there's also the `scholastic_clus` object that is constructed from the `scholastic_dat` data set. \n\nIf you want a little more detail, you can use `tar_manifest()` to get a summary of all the targets and the command with which they are associated:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntar_manifest()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 2\n  name            command                                                   \n  <chr>           <chr>                                                     \n1 input           \"\\\"spells.csv\\\"\"                                          \n2 output          \"set_output_dir()\"                                        \n3 spells          \"read_csv(input, show_col_types = FALSE)\"                 \n4 scholastic_dat  \"scholastic_data(spells)\"                                 \n5 dice_dat        \"dice_data(spells)\"                                       \n6 scholastic_clus \"scholastic_clusters(scholastic_dat)\"                     \n7 dice_pic        \"dice_plot(dice_dat, output)\"                             \n8 scholastic_pic  \"scholastic_plot(scholastic_dat, scholastic_clus, output)\"\n```\n\n\n:::\n:::\n\n\n\nThe output isn't as pretty as the HTML widget, but you can use it to see exactly what the target objects are, as well as the the command used to construct them. \n\n### Executing the pipeline\n\nIn the HTML widget above, all the targets are coloured in blue, indicating that these are \"outdated\". You can get a listing of all outdated targets like this:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntar_outdated()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"scholastic_clus\" \"scholastic_dat\"  \"spells\"          \"scholastic_pic\" \n[5] \"output\"          \"dice_pic\"        \"input\"           \"dice_dat\"       \n```\n\n\n:::\n:::\n\n\n\nThese are the targets that need to be (re)run. We can do this by calling `tar_make()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntar_make()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n▶ dispatched target input\n● completed target input [0.309 seconds, 302.514 kilobytes]\n▶ dispatched target output\n● completed target output [0.002 seconds, 165 bytes]\n▶ dispatched target spells\n● completed target spells [0.084 seconds, 73.966 kilobytes]\n▶ dispatched target scholastic_dat\n● completed target scholastic_dat [0.014 seconds, 401 bytes]\n▶ dispatched target dice_dat\n● completed target dice_dat [0.016 seconds, 33.486 kilobytes]\n▶ dispatched target scholastic_clus\n● completed target scholastic_clus [0.059 seconds, 634 bytes]\n▶ dispatched target dice_pic\n● completed target dice_pic [0.892 seconds, 174 bytes]\n▶ dispatched target scholastic_pic\n● completed target scholastic_pic [0.21 seconds, 177 bytes]\n▶ ended pipeline [1.691 seconds]\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfs::dir_tree()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n.\n├── _targets\n│   ├── meta\n│   │   ├── meta\n│   │   ├── process\n│   │   └── progress\n│   ├── objects\n│   │   ├── dice_dat\n│   │   ├── dice_pic\n│   │   ├── output\n│   │   ├── scholastic_clus\n│   │   ├── scholastic_dat\n│   │   ├── scholastic_pic\n│   │   └── spells\n│   └── user\n├── _targets.R\n├── dice.R\n├── output\n│   ├── dice_pic.png\n│   └── scholastic_pic.png\n├── scholastic.R\n└── spells.csv\n```\n\n\n:::\n:::\n\n\n\n## Project 2: A toy blog\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::opts_knit$set(\n  root.dir = here::here(\n    \"posts\", \n    \"2025-01-02_using-targets\",  \n    \"liteblog\"\n  )\n)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfs::dir_tree()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n.\n├── _liteblog-footer.html\n├── _liteblog-header.html\n├── _liteblog.R\n├── _liteblog.css\n├── _targets.R\n└── source\n    ├── 404.rmd\n    ├── _001_hello-cruel-world.rmd\n    ├── _002_blog-object.rmd\n    └── index.rmd\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntar_visnetwork()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-21697d58abce2053a245\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-21697d58abce2053a245\">{\"x\":{\"nodes\":{\"name\":[\"blog\",\"blog_css\",\"blog_ftr\",\"blog_hdr\",\"blog_rds\",\"post_files\",\"post_fuse\",\"post_paths\",\"static_copy\",\"static_files\",\"static_paths\",\"Liteblog\"],\"type\":[\"stem\",\"stem\",\"stem\",\"stem\",\"stem\",\"pattern\",\"pattern\",\"stem\",\"pattern\",\"pattern\",\"stem\",\"object\"],\"description\":[null,null,null,null,null,null,null,null,null,null,null,null],\"status\":[\"outdated\",\"outdated\",\"outdated\",\"outdated\",\"outdated\",\"outdated\",\"outdated\",\"outdated\",\"outdated\",\"outdated\",\"outdated\",\"outdated\"],\"seconds\":[null,null,null,null,null,null,null,null,null,null,null,null],\"bytes\":[null,null,null,null,null,null,null,null,null,null,null,null],\"branches\":[null,null,null,null,null,null,null,null,null,null,null,null],\"label\":[\"blog\",\"blog_css\",\"blog_ftr\",\"blog_hdr\",\"blog_rds\",\"post_files\",\"post_fuse\",\"post_paths\",\"static_copy\",\"static_files\",\"static_paths\",\"Liteblog\"],\"color\":[\"#78B7C5\",\"#78B7C5\",\"#78B7C5\",\"#78B7C5\",\"#78B7C5\",\"#78B7C5\",\"#78B7C5\",\"#78B7C5\",\"#78B7C5\",\"#78B7C5\",\"#78B7C5\",\"#78B7C5\"],\"id\":[\"blog\",\"blog_css\",\"blog_ftr\",\"blog_hdr\",\"blog_rds\",\"post_files\",\"post_fuse\",\"post_paths\",\"static_copy\",\"static_files\",\"static_paths\",\"Liteblog\"],\"level\":[2,1,1,1,3,4,5,3,5,4,3,1],\"shape\":[\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"square\",\"square\",\"dot\",\"square\",\"square\",\"dot\",\"triangleDown\"]},\"edges\":{\"from\":[\"blog\",\"blog\",\"blog_css\",\"blog_ftr\",\"blog_hdr\",\"post_files\",\"post_paths\",\"static_paths\",\"post_paths\",\"blog\",\"static_files\",\"blog\",\"Liteblog\",\"blog\"],\"to\":[\"static_paths\",\"post_fuse\",\"post_fuse\",\"post_fuse\",\"post_fuse\",\"post_fuse\",\"post_fuse\",\"static_files\",\"post_files\",\"static_copy\",\"static_copy\",\"blog_rds\",\"blog\",\"post_paths\"],\"arrows\":[\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"physics\":false},\"manipulation\":{\"enabled\":false},\"edges\":{\"smooth\":{\"type\":\"cubicBezier\",\"forceDirection\":\"horizontal\"}},\"physics\":{\"stabilization\":false},\"interaction\":{\"zoomSpeed\":1},\"layout\":{\"hierarchical\":{\"enabled\":true,\"direction\":\"LR\"}}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false,\"style\":\"width: 150px; height: 26px\",\"useLabels\":true,\"main\":\"Select by id\"},\"byselection\":{\"enabled\":false,\"style\":\"width: 150px; height: 26px\",\"multiple\":false,\"hideColor\":\"rgba(200,200,200,0.5)\",\"highlight\":false},\"main\":{\"text\":\"\",\"style\":\"font-family:Georgia, Times New Roman, Times, serif;font-weight:bold;font-size:20px;text-align:center;\"},\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"highlight\":{\"enabled\":true,\"hoverNearest\":false,\"degree\":{\"from\":1,\"to\":1},\"algorithm\":\"hierarchical\",\"hideColor\":\"rgba(200,200,200,0.5)\",\"labelOnly\":true},\"collapse\":{\"enabled\":true,\"fit\":false,\"resetHighlight\":true,\"clusterOptions\":null,\"keepCoord\":true,\"labelSuffix\":\"(cluster)\"},\"legend\":{\"width\":0.2,\"useGroups\":false,\"position\":\"right\",\"ncol\":1,\"stepX\":100,\"stepY\":100,\"zoom\":true,\"nodes\":{\"label\":[\"Outdated\",\"Stem\",\"Pattern\",\"Object\"],\"color\":[\"#78B7C5\",\"#899DA4\",\"#899DA4\",\"#899DA4\"],\"shape\":[\"dot\",\"dot\",\"square\",\"triangleDown\"]},\"nodesToDataframe\":true},\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntar_make()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n▶ dispatched target blog\n● completed target blog [0.002 seconds, 9.739 kilobytes]\n▶ dispatched target blog_css\n● completed target blog_css [0 seconds, 3.759 kilobytes]\n▶ dispatched target blog_ftr\n● completed target blog_ftr [0 seconds, 115 bytes]\n▶ dispatched target blog_hdr\n● completed target blog_hdr [0 seconds, 271 bytes]\n▶ dispatched target static_paths\n● completed target static_paths [0.029 seconds, 139 bytes]\n▶ dispatched target post_paths\n● completed target post_paths [0.001 seconds, 185 bytes]\n▶ dispatched target blog_rds\n● completed target blog_rds [0.001 seconds, 0 bytes]\n▶ dispatched branch static_files_1b8fcc933438b737\n● completed branch static_files_1b8fcc933438b737 [0 seconds, 0 bytes]\n● completed pattern static_files \n▶ dispatched branch post_files_bfe2f528519c0ff0\n● completed branch post_files_bfe2f528519c0ff0 [0 seconds, 320 bytes]\n▶ dispatched branch post_files_0d76c076472d293c\n● completed branch post_files_0d76c076472d293c [0 seconds, 4.667 kilobytes]\n▶ dispatched branch post_files_64b628c4152d280c\n● completed branch post_files_64b628c4152d280c [0 seconds, 2.451 kilobytes]\n▶ dispatched branch post_files_31d6f026c8bea126\n● completed branch post_files_31d6f026c8bea126 [0 seconds, 1.777 kilobytes]\n● completed pattern post_files \n▶ dispatched branch static_copy_8782d3d7b7b28f55\n● completed branch static_copy_8782d3d7b7b28f55 [0.013 seconds, 173 bytes]\n● completed pattern static_copy \n▶ dispatched branch post_fuse_76c67863243e7a55\n● completed branch post_fuse_76c67863243e7a55 [0.189 seconds, 170 bytes]\n▶ dispatched branch post_fuse_9597bb36619812f6\n● completed branch post_fuse_9597bb36619812f6 [0.609 seconds, 186 bytes]\n▶ dispatched branch post_fuse_95cfcfc8e4bf98af\n● completed branch post_fuse_95cfcfc8e4bf98af [0.08 seconds, 182 bytes]\n▶ dispatched branch post_fuse_84cb9cd7cf957481\n● completed branch post_fuse_84cb9cd7cf957481 [0.038 seconds, 173 bytes]\n● completed pattern post_fuse \n▶ ended pipeline [1.049 seconds]\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntar_visnetwork()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-4929a56e939b13f92b78\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-4929a56e939b13f92b78\">{\"x\":{\"nodes\":{\"name\":[\"blog\",\"blog_css\",\"blog_ftr\",\"blog_hdr\",\"blog_rds\",\"post_files\",\"post_fuse\",\"post_paths\",\"static_copy\",\"static_files\",\"static_paths\",\"Liteblog\"],\"type\":[\"stem\",\"stem\",\"stem\",\"stem\",\"stem\",\"pattern\",\"pattern\",\"stem\",\"pattern\",\"pattern\",\"stem\",\"object\"],\"description\":[null,null,null,null,null,null,null,null,null,null,null,null],\"status\":[\"uptodate\",\"uptodate\",\"uptodate\",\"uptodate\",\"uptodate\",\"outdated\",\"outdated\",\"outdated\",\"outdated\",\"outdated\",\"outdated\",\"uptodate\"],\"seconds\":[0.002,0,0,0,0.001,0,0.916,0.001,0.013,0,0.029,null],\"bytes\":[9739,3759,115,271,0,9215,711,185,173,0,139,null],\"branches\":[null,null,null,null,null,4,4,null,1,1,null,null],\"label\":[\"blog\",\"blog_css\",\"blog_ftr\",\"blog_hdr\",\"blog_rds\",\"post_files\",\"post_fuse\",\"post_paths\",\"static_copy\",\"static_files\",\"static_paths\",\"Liteblog\"],\"color\":[\"#354823\",\"#354823\",\"#354823\",\"#354823\",\"#354823\",\"#78B7C5\",\"#78B7C5\",\"#78B7C5\",\"#78B7C5\",\"#78B7C5\",\"#78B7C5\",\"#354823\"],\"id\":[\"blog\",\"blog_css\",\"blog_ftr\",\"blog_hdr\",\"blog_rds\",\"post_files\",\"post_fuse\",\"post_paths\",\"static_copy\",\"static_files\",\"static_paths\",\"Liteblog\"],\"level\":[2,1,1,1,3,4,5,3,5,4,3,1],\"shape\":[\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"square\",\"square\",\"dot\",\"square\",\"square\",\"dot\",\"triangleDown\"]},\"edges\":{\"from\":[\"blog\",\"blog\",\"blog_css\",\"blog_ftr\",\"blog_hdr\",\"post_files\",\"post_paths\",\"static_paths\",\"post_paths\",\"blog\",\"static_files\",\"blog\",\"Liteblog\",\"blog\"],\"to\":[\"static_paths\",\"post_fuse\",\"post_fuse\",\"post_fuse\",\"post_fuse\",\"post_fuse\",\"post_fuse\",\"static_files\",\"post_files\",\"static_copy\",\"static_copy\",\"blog_rds\",\"blog\",\"post_paths\"],\"arrows\":[\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"physics\":false},\"manipulation\":{\"enabled\":false},\"edges\":{\"smooth\":{\"type\":\"cubicBezier\",\"forceDirection\":\"horizontal\"}},\"physics\":{\"stabilization\":false},\"interaction\":{\"zoomSpeed\":1},\"layout\":{\"hierarchical\":{\"enabled\":true,\"direction\":\"LR\"}}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false,\"style\":\"width: 150px; height: 26px\",\"useLabels\":true,\"main\":\"Select by id\"},\"byselection\":{\"enabled\":false,\"style\":\"width: 150px; height: 26px\",\"multiple\":false,\"hideColor\":\"rgba(200,200,200,0.5)\",\"highlight\":false},\"main\":{\"text\":\"\",\"style\":\"font-family:Georgia, Times New Roman, Times, serif;font-weight:bold;font-size:20px;text-align:center;\"},\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"highlight\":{\"enabled\":true,\"hoverNearest\":false,\"degree\":{\"from\":1,\"to\":1},\"algorithm\":\"hierarchical\",\"hideColor\":\"rgba(200,200,200,0.5)\",\"labelOnly\":true},\"collapse\":{\"enabled\":true,\"fit\":false,\"resetHighlight\":true,\"clusterOptions\":null,\"keepCoord\":true,\"labelSuffix\":\"(cluster)\"},\"legend\":{\"width\":0.2,\"useGroups\":false,\"position\":\"right\",\"ncol\":1,\"stepX\":100,\"stepY\":100,\"zoom\":true,\"nodes\":{\"label\":[\"Up to date\",\"Outdated\",\"Stem\",\"Pattern\",\"Object\"],\"color\":[\"#354823\",\"#78B7C5\",\"#899DA4\",\"#899DA4\",\"#899DA4\"],\"shape\":[\"dot\",\"dot\",\"dot\",\"square\",\"triangleDown\"]},\"nodesToDataframe\":true},\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\nWhy are some targets still showing as outdated? Because that's how I set them up with `tar_cue()`. By design, every time we rebuild, the blog will check the file paths to see if there are any new static files to be copied or new posts to be fused. Consequently, those two targets and everything downstream of those show up as outdated. But notice that when we call `tar_make()` again...\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntar_make()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✔ skipped target blog\n✔ skipped target blog_css\n✔ skipped target blog_ftr\n✔ skipped target blog_hdr\n▶ dispatched target static_paths\n● completed target static_paths [0.025 seconds, 139 bytes]\n▶ dispatched target post_paths\n● completed target post_paths [0 seconds, 185 bytes]\n✔ skipped target blog_rds\n✔ skipped branch static_files_1b8fcc933438b737\n✔ skipped pattern static_files\n✔ skipped branch post_files_bfe2f528519c0ff0\n✔ skipped branch post_files_0d76c076472d293c\n✔ skipped branch post_files_64b628c4152d280c\n✔ skipped branch post_files_31d6f026c8bea126\n✔ skipped pattern post_files\n✔ skipped branch static_copy_8782d3d7b7b28f55\n✔ skipped pattern static_copy\n✔ skipped branch post_fuse_76c67863243e7a55\n✔ skipped branch post_fuse_9597bb36619812f6\n✔ skipped branch post_fuse_95cfcfc8e4bf98af\n✔ skipped branch post_fuse_84cb9cd7cf957481\n✔ skipped pattern post_fuse\n▶ ended pipeline [0.11 seconds]\n```\n\n\n:::\n:::\n\n\n\n...only the `static_paths` and `post_paths` targets are rerun: nothing has actually changed in the `source` folder, so the fuse and copy targets are skipped.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfs::dir_tree()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n.\n├── _liteblog-footer.html\n├── _liteblog-header.html\n├── _liteblog.R\n├── _liteblog.css\n├── _liteblog.rds\n├── _targets\n│   ├── meta\n│   │   ├── meta\n│   │   ├── process\n│   │   └── progress\n│   ├── objects\n│   │   ├── blog\n│   │   ├── post_fuse_76c67863243e7a55\n│   │   ├── post_fuse_84cb9cd7cf957481\n│   │   ├── post_fuse_9597bb36619812f6\n│   │   ├── post_fuse_95cfcfc8e4bf98af\n│   │   ├── post_paths\n│   │   ├── static_copy_8782d3d7b7b28f55\n│   │   └── static_paths\n│   └── user\n├── _targets.R\n├── site\n│   ├── 001\n│   │   └── hello-cruel-world\n│   │       └── index.html\n│   ├── 002\n│   │   └── blog-object\n│   │       └── index.html\n│   ├── 404.html\n│   └── index.html\n└── source\n    ├── 404.rmd\n    ├── _001_hello-cruel-world.rmd\n    ├── _002_blog-object.rmd\n    └── index.rmd\n```\n\n\n:::\n:::\n\n\n\nNow suppose I were to add two new posts into the the `source` folder:\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nsource\n├── 404.rmd\n├── _001_hello-cruel-world.rmd\n├── _002_blog-object.rmd\n├── _003_schools-of-magic.rmd\n├── _004_spell-dice.rmd\n├── data\n│   └── spells.csv\n└── index.rmd\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntar_visnetwork()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-56457827ab1876f7c579\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-56457827ab1876f7c579\">{\"x\":{\"nodes\":{\"name\":[\"blog\",\"blog_css\",\"blog_ftr\",\"blog_hdr\",\"blog_rds\",\"post_files\",\"post_fuse\",\"post_paths\",\"static_copy\",\"static_files\",\"static_paths\",\"Liteblog\"],\"type\":[\"stem\",\"stem\",\"stem\",\"stem\",\"stem\",\"pattern\",\"pattern\",\"stem\",\"pattern\",\"pattern\",\"stem\",\"object\"],\"description\":[null,null,null,null,null,null,null,null,null,null,null,null],\"status\":[\"uptodate\",\"uptodate\",\"uptodate\",\"uptodate\",\"uptodate\",\"outdated\",\"outdated\",\"outdated\",\"outdated\",\"outdated\",\"outdated\",\"uptodate\"],\"seconds\":[0.002,0,0,0,0.001,0,0.916,0,0.013,0,0.025,null],\"bytes\":[9739,3759,115,271,0,9215,711,185,173,0,139,null],\"branches\":[null,null,null,null,null,4,4,null,1,1,null,null],\"label\":[\"blog\",\"blog_css\",\"blog_ftr\",\"blog_hdr\",\"blog_rds\",\"post_files\",\"post_fuse\",\"post_paths\",\"static_copy\",\"static_files\",\"static_paths\",\"Liteblog\"],\"color\":[\"#354823\",\"#354823\",\"#354823\",\"#354823\",\"#354823\",\"#78B7C5\",\"#78B7C5\",\"#78B7C5\",\"#78B7C5\",\"#78B7C5\",\"#78B7C5\",\"#354823\"],\"id\":[\"blog\",\"blog_css\",\"blog_ftr\",\"blog_hdr\",\"blog_rds\",\"post_files\",\"post_fuse\",\"post_paths\",\"static_copy\",\"static_files\",\"static_paths\",\"Liteblog\"],\"level\":[2,1,1,1,3,4,5,3,5,4,3,1],\"shape\":[\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"square\",\"square\",\"dot\",\"square\",\"square\",\"dot\",\"triangleDown\"]},\"edges\":{\"from\":[\"blog\",\"blog\",\"blog_css\",\"blog_ftr\",\"blog_hdr\",\"post_files\",\"post_paths\",\"static_paths\",\"post_paths\",\"blog\",\"static_files\",\"blog\",\"Liteblog\",\"blog\"],\"to\":[\"static_paths\",\"post_fuse\",\"post_fuse\",\"post_fuse\",\"post_fuse\",\"post_fuse\",\"post_fuse\",\"static_files\",\"post_files\",\"static_copy\",\"static_copy\",\"blog_rds\",\"blog\",\"post_paths\"],\"arrows\":[\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"physics\":false},\"manipulation\":{\"enabled\":false},\"edges\":{\"smooth\":{\"type\":\"cubicBezier\",\"forceDirection\":\"horizontal\"}},\"physics\":{\"stabilization\":false},\"interaction\":{\"zoomSpeed\":1},\"layout\":{\"hierarchical\":{\"enabled\":true,\"direction\":\"LR\"}}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false,\"style\":\"width: 150px; height: 26px\",\"useLabels\":true,\"main\":\"Select by id\"},\"byselection\":{\"enabled\":false,\"style\":\"width: 150px; height: 26px\",\"multiple\":false,\"hideColor\":\"rgba(200,200,200,0.5)\",\"highlight\":false},\"main\":{\"text\":\"\",\"style\":\"font-family:Georgia, Times New Roman, Times, serif;font-weight:bold;font-size:20px;text-align:center;\"},\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"highlight\":{\"enabled\":true,\"hoverNearest\":false,\"degree\":{\"from\":1,\"to\":1},\"algorithm\":\"hierarchical\",\"hideColor\":\"rgba(200,200,200,0.5)\",\"labelOnly\":true},\"collapse\":{\"enabled\":true,\"fit\":false,\"resetHighlight\":true,\"clusterOptions\":null,\"keepCoord\":true,\"labelSuffix\":\"(cluster)\"},\"legend\":{\"width\":0.2,\"useGroups\":false,\"position\":\"right\",\"ncol\":1,\"stepX\":100,\"stepY\":100,\"zoom\":true,\"nodes\":{\"label\":[\"Up to date\",\"Outdated\",\"Stem\",\"Pattern\",\"Object\"],\"color\":[\"#354823\",\"#78B7C5\",\"#899DA4\",\"#899DA4\",\"#899DA4\"],\"shape\":[\"dot\",\"dot\",\"dot\",\"square\",\"triangleDown\"]},\"nodesToDataframe\":true},\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\nLooks the same. But this time when we call `tar_make()`, there will actually be some changes to the `source` folder, so the downstream targets run:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntar_make()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✔ skipped target blog\n✔ skipped target blog_css\n✔ skipped target blog_ftr\n✔ skipped target blog_hdr\n▶ dispatched target static_paths\n● completed target static_paths [0.024 seconds, 159 bytes]\n▶ dispatched target post_paths\n● completed target post_paths [0.001 seconds, 218 bytes]\n✔ skipped target blog_rds\n✔ skipped branch static_files_1b8fcc933438b737\n▶ dispatched branch static_files_790cd5756211053f\n● completed branch static_files_790cd5756211053f [0 seconds, 302.514 kilobytes]\n● completed pattern static_files \n✔ skipped branch post_files_bfe2f528519c0ff0\n✔ skipped branch post_files_0d76c076472d293c\n✔ skipped branch post_files_64b628c4152d280c\n▶ dispatched branch post_files_8e7e3b0090f4b0d4\n● completed branch post_files_8e7e3b0090f4b0d4 [0 seconds, 11.136 kilobytes]\n▶ dispatched branch post_files_4f6c7b9ae1c233a4\n● completed branch post_files_4f6c7b9ae1c233a4 [0 seconds, 3.631 kilobytes]\n✔ skipped branch post_files_31d6f026c8bea126\n● completed pattern post_files \n✔ skipped branch static_copy_8782d3d7b7b28f55\n▶ dispatched branch static_copy_71bb77eeb0169883\n● completed branch static_copy_71bb77eeb0169883 [0.014 seconds, 173 bytes]\n● completed pattern static_copy \n▶ dispatched branch post_fuse_76c67863243e7a55\n● completed branch post_fuse_76c67863243e7a55 [0.211 seconds, 170 bytes]\n▶ dispatched branch post_fuse_9597bb36619812f6\n● completed branch post_fuse_9597bb36619812f6 [0.313 seconds, 186 bytes]\n▶ dispatched branch post_fuse_95cfcfc8e4bf98af\n● completed branch post_fuse_95cfcfc8e4bf98af [0.096 seconds, 182 bytes]\n▶ dispatched branch post_fuse_08c37253a0821d70\n● completed branch post_fuse_08c37253a0821d70 [0.73 seconds, 185 bytes]\n▶ dispatched branch post_fuse_f9dff6bed3af7eb2\n● completed branch post_fuse_f9dff6bed3af7eb2 [0.972 seconds, 183 bytes]\n▶ dispatched branch post_fuse_84cb9cd7cf957481\n● completed branch post_fuse_84cb9cd7cf957481 [0.043 seconds, 173 bytes]\n● completed pattern post_fuse \n▶ ended pipeline [2.526 seconds]\n```\n\n\n:::\n:::\n\n\n\nThis is clearly an inefficient design: whenever the source folder changes, all of the posts get rendered again. In an ideal world we wouldn't do this, and only those posts (or static files) that have been modified would get run again. However, it would take a little more effort than I'm willing to expend on this side-project to make this work properly: in order for it to behave the way we want it to, the build targets need to be able to inspect the internal contents of each blog post to determine which static files (or other posts!) are hidden dependencies. Discovering those dependencies reliably seems like hard work, so for the purposes of this toy project it just renders everything again.\n\n\nYou can browse the built website [here](./site/index.html)\n\n\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/vis-9.1.0/vis-network.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/vis-9.1.0/vis-network.min.js\"></script>\n<script src=\"../../site_libs/visNetwork-binding-2.1.2/visNetwork.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}