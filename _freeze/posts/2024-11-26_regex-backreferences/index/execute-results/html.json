{
  "hash": "23f8d0603ad8ddb1be6e10eecc52690b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Baby got back(references)\"\ndescription: \"Now I have \\\\\\\\2 problems\"\ndate: \"2024-11-26\"\nimage: \"feather2.jpg\"\n--- \n\n\n\n<!--------------- my typical setup ----------------->\n\n\n\n\n\n\n\n::: {.cell}\n<style type=\"text/css\">\n@import url('https://fonts.googleapis.com/css2?family=Tangerine:wght@400;700&display=swap');\n\n.tangerine-regular {\n  font-family: \"Tangerine\", cursive;\n  font-weight: 400;\n  font-style: normal;\n}\n\n.tangerine-bold {\n  font-family: \"Tangerine\", cursive;\n  font-weight: 700;\n  font-style: normal;\n}\n</style>\n:::\n\n\n\n<!--------------- post begins here ----------------->\n\n> Some people, when confronted with a problem, think \"I know, I'll use regular expressions.\" Now they have two problems. <br>\n> &nbsp;&nbsp; -- [Ancient lore](https://regex.info/blog/2006-09-15/247)\n\nI don't love regular expressions. Yes, they're a surprisingly powerful tool for pattern matching and text processing, built with syntax so compact that you can encode complex string manipulation tasks using a few keystrokes, but... no, I don't love them. At least once a week I have this moment when a yawning pit of black despair opens at my feet, and the barbed tentacles of despair wrap around my legs, poison injects chill into my veins, the icy claws of anxiety rip through my viscera, and a withered voice of pure evil slithers into my brain and speaks to me in the seductive language of Mordor:\n\n<span class=\"tangerine-bold\" style=\"font-size: 28pt\">You can write a regular expression for this</span>\n\nI try to resist. I'm a good girl, I tell him. I write *readable* code. I write *maintainable* code. I would never. Not on a first date. But oh, it's so cold outside and honestly Sauron is kinda hot. Have you not watched Rings of Power? Sometimes a girl has needs, and sometimes a Dark Lord has the goods.\n\nUm.\n\nAnyway.\n\nWhere was I?\n\nOh right... regular expressions. Yeah. \n\n<br>\n\n## Oh, not another take (on regular expressions)\n\nSo let's be very clear on what this post is not. It is not a tutorial on regular expressions. The world doesn't need another one of those. It is not an opinion piece on regular expressions. The world *definitely* doesn't need another one of those. It's something far more important than either. It is a thinly-veiled excuse for me to post Sabrina Carpenter lyrics.\n\nSpeaking of which... \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfeather <- brio::read_lines(\"feather.txt\")\ncat(feather[1:10], sep = \"\\n\")\n```\n\n<pre>[Intro]\n(Do-do-do, do-do-do, do-do-do, do-do-do)\n(Do-do, do-do-do, do-do-do, do-do-do)\nOh, not another take\n\n[Verse 1]\nOh, it's like that, I'm your dream come true\nWhen it's on a platter for you\nThen you pull back when I try to make plans\nMore than two hours in advance, mm\n</pre>\n:::\n\n\n\n<br> \n\n::: {layout-ncol=2}\n\n![When I try to write a regular expression](feather1.jpg)\n\n![When the regular expression encounters a string](feather2.jpg)\n\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(stringr)\n```\n:::\n\n\n\n## I'm so sorry for my loss\n\nAs I was saying, I don't love regular expressions. I'm not good at writing them, and I'm even worse at reading them. My typical process for writing a regular expression goes something like this...\n\nOkay, that bit at the start of Feather where she sings \"do-do-do\" over and over, maybe I'll try to find all the passages in the song where that happens, why not? Seems easy enough, I'll look for every line that contains `\"do\"`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_view(feather, \"do\")\n```\n\n<pre> [2] │ (Do-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>)\n [3] │ (Do-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>)\n[13] │ I slam the <span style='color:#008080'>&lt;do&gt;</span>or, I hit ignore\n[27] │ (Do-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>)\n[28] │ (Do-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>)\n[38] │ I slam the <span style='color:#008080'>&lt;do&gt;</span>or (Slam the <span style='color:#008080'>&lt;do&gt;</span>or), I hit ignore (Hit ignore)\n[52] │ (Do-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>)\n[54] │ (Do-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>)\n[57] │ You want me? I'm <span style='color:#008080'>&lt;do&gt;</span>ne\n[60] │ You want me? I'm <span style='color:#008080'>&lt;do&gt;</span>ne (I'm <span style='color:#008080'>&lt;do&gt;</span>ne)\n[65] │ You want me? I'm <span style='color:#008080'>&lt;do&gt;</span>ne\n[70] │ You want me? I'm <span style='color:#008080'>&lt;do&gt;</span>ne\n</pre>\n:::\n\n\n\nAh yeah that isn't quite right. The English language has this wacky thing called capitalisation. Been around for a while girl, you should probably have thought of that. Okay, so what I need is a regular expression that matches `\"do\"` and also `\"Do\"`. Well that's easy, I can use square brackets: the notation `[Dd]` means `\"D\"` or `\"d\"`. So I guess I'll use `[Dd]o\"` then?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_view(feather, \"[Dd]o\")\n```\n\n<pre> [2] │ (<span style='color:#008080'>&lt;Do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>)\n [3] │ (<span style='color:#008080'>&lt;Do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>)\n[13] │ I slam the <span style='color:#008080'>&lt;do&gt;</span>or, I hit ignore\n[27] │ (<span style='color:#008080'>&lt;Do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>)\n[28] │ (<span style='color:#008080'>&lt;Do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>)\n[38] │ I slam the <span style='color:#008080'>&lt;do&gt;</span>or (Slam the <span style='color:#008080'>&lt;do&gt;</span>or), I hit ignore (Hit ignore)\n[52] │ (<span style='color:#008080'>&lt;Do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>)\n[54] │ (<span style='color:#008080'>&lt;Do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>, <span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>-<span style='color:#008080'>&lt;do&gt;</span>)\n[57] │ You want me? I'm <span style='color:#008080'>&lt;do&gt;</span>ne\n[60] │ You want me? I'm <span style='color:#008080'>&lt;do&gt;</span>ne (I'm <span style='color:#008080'>&lt;do&gt;</span>ne)\n[65] │ You want me? I'm <span style='color:#008080'>&lt;do&gt;</span>ne\n[70] │ You want me? I'm <span style='color:#008080'>&lt;do&gt;</span>ne\n</pre>\n:::\n\n\n\nAh well... that's better I guess but actually it's still wrong because when Sabrina tells us she's \"done\" we probably don't want to confuse that with her singing \"do-do\", right? Okay well what we should probably acknowledge then is that we're looking specifically for multiple \"do\" strings connected with a hyphen (ignoring capitalisation)? Something like this `\"[Dd]o-[Dd]o\"` then?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_view(feather, \"[Dd]o-[Dd]o\")\n```\n\n<pre> [2] │ (<span style='color:#008080'>&lt;Do-do&gt;</span>-do, <span style='color:#008080'>&lt;do-do&gt;</span>-do, <span style='color:#008080'>&lt;do-do&gt;</span>-do, <span style='color:#008080'>&lt;do-do&gt;</span>-do)\n [3] │ (<span style='color:#008080'>&lt;Do-do&gt;</span>, <span style='color:#008080'>&lt;do-do&gt;</span>-do, <span style='color:#008080'>&lt;do-do&gt;</span>-do, <span style='color:#008080'>&lt;do-do&gt;</span>-do)\n[27] │ (<span style='color:#008080'>&lt;Do-do&gt;</span>-do, <span style='color:#008080'>&lt;do-do&gt;</span>-do, <span style='color:#008080'>&lt;do-do&gt;</span>-do, <span style='color:#008080'>&lt;do-do&gt;</span>-do)\n[28] │ (<span style='color:#008080'>&lt;Do-do&gt;</span>, <span style='color:#008080'>&lt;do-do&gt;</span>-do, <span style='color:#008080'>&lt;do-do&gt;</span>-do, <span style='color:#008080'>&lt;do-do&gt;</span>-do)\n[52] │ (<span style='color:#008080'>&lt;Do-do&gt;</span>-do, <span style='color:#008080'>&lt;do-do&gt;</span>-do, <span style='color:#008080'>&lt;do-do&gt;</span>-do, <span style='color:#008080'>&lt;do-do&gt;</span>-do)\n[54] │ (<span style='color:#008080'>&lt;Do-do&gt;</span>, <span style='color:#008080'>&lt;do-do&gt;</span>-do, <span style='color:#008080'>&lt;do-do&gt;</span>-do, <span style='color:#008080'>&lt;do-do&gt;</span>-do)\n</pre>\n:::\n\n\n\nBut wait, now we catch \"do-do\" but not \"do-do-do\"? Yeah that doesn't work. Oh, I know, I'll define `\"([Dd]o)\"` as a capture group, and then use a [backreference](https://www.regular-expressions.info/refcapture.html) to look for one or more additional copies of the group separated by hyphens. I'm so clever, I totally know how to use backreferences:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_view(feather, \"([Dd]o)(-\\\\1)+\")\n```\n\n<pre> [2] │ (Do-<span style='color:#008080'>&lt;do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>)\n [3] │ (Do-do, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>)\n[27] │ (Do-<span style='color:#008080'>&lt;do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>)\n[28] │ (Do-do, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>)\n[52] │ (Do-<span style='color:#008080'>&lt;do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>)\n[54] │ (Do-do, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>)\n</pre>\n:::\n\n\n\nAh fuck. Right, even though `\"Do\"` and `\"do\"` both match the *pattern* that defines the capture group (i.e., `[Dd]o`), they aren't identical strings. The backreference has to match the exact string that matched the group in the first instance. That is `([Dd]o)(-\\\\1)+` will match against `\"do-do\"`, `\"do-do-do\"`, and `\"Do-Do-Do\"`, but it won't match to `\"Do-do\"`. Sigh. \n\nStop trying to be clever girl. You can just do this:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_view(feather, \"([Dd]o)(-[Dd]o)+\")\n```\n\n<pre> [2] │ (<span style='color:#008080'>&lt;Do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>)\n [3] │ (<span style='color:#008080'>&lt;Do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>)\n[27] │ (<span style='color:#008080'>&lt;Do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>)\n[28] │ (<span style='color:#008080'>&lt;Do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>)\n[52] │ (<span style='color:#008080'>&lt;Do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>)\n[54] │ (<span style='color:#008080'>&lt;Do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>, <span style='color:#008080'>&lt;do-do-do&gt;</span>)\n</pre>\n:::\n\n\n\nIs it perfect? Probably not. Is it good enough? Probably. Am I bored already? Oh my yes. It should not have taken me 20 minutes to figure out how to insert a few emojis into some song lyrics, but such is life.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfeather |> \n  str_replace_all(\"([Dd]o)(-[Dd]o)+\", \"🎶\") |> \n  str_replace_all(\"feather\", \"🪶\") |> \n  str_replace_all(\"wine\", \"🍷\") |> \n  str_replace_all(\"\\\\(Ah\\\\)\", \"(😌)\") |> \n  str_replace_all(\"\\\\[([^\\\\[\\\\]]+)\\\\]\", \"<\\\\1>\") |> \n  cat(sep = \"\\n\")\n```\n\n<pre><span style='color:#008080'>&lt;Intro&gt;</span>\n(🎶, 🎶, 🎶, 🎶)\n(🎶, 🎶, 🎶, 🎶)\nOh, not another take\n\n<span style='color:#008080'>&lt;Verse 1&gt;</span>\nOh, it's like that, I'm your dream come true\nWhen it's on a platter for you\nThen you pull back when I try to make plans\nMore than two hours in advance, mm\n\n<span style='color:#008080'>&lt;Pre-Chorus&gt;</span>\nI slam the door, I hit ignore\nI'm saying, \"No, no, no, no more\"\nI got you blocked, after this, an afterthought\nI finally cut you off\n\n<span style='color:#008080'>&lt;Chorus&gt;</span>\nI feel so much lighter like a 🪶 with you off my mind (😌)\nFloatin' through the memories like whatever, you're a waste of time (😌)\nYour signals are mixed, you act like a bitch\nYou fit every stereotype, \"Send a pic\"\nI feel so much lighter like a 🪶 with you out my life\nWith you out my life\n\n<span style='color:#008080'>&lt;Post-Chorus&gt;</span>\n(🎶, 🎶, 🎶, 🎶)\n(🎶, 🎶, 🎶, 🎶)\nLike a 🪶, like a 🪶, like a 🪶, yeah\n\n<span style='color:#008080'>&lt;Verse 2&gt;</span>\nIt feels so good\nNot carin' where you are tonight\nAnd it feels so good\nNot pretendin' to like the 🍷 you like\n\n<span style='color:#008080'>&lt;Pre-Chorus&gt;</span>\nI slam the door (Slam the door), I hit ignore (Hit ignore)\nI'm saying, \"No, no, no, no more\"\nI got you blocked, excited to never talk, I\nI'm so sorry for your loss\n\n<span style='color:#008080'>&lt;Chorus&gt;</span>\nI feel so much lighter like a 🪶 with you off my mind (😌)\nFloatin' through the memories like whatever, you're a waste of time (😌)\nYour signals are mixed, you act like a bitch (A bitch)\nYou fit every stereotype, \"Send a pic\"\nI feel so much lighter like a 🪶 with you out my life\nWith you out my life\n\n<span style='color:#008080'>&lt;Post-Chorus&gt;</span>\n(🎶, 🎶, 🎶, 🎶)\nAh, mm\n(🎶, 🎶, 🎶, 🎶)\nLike a 🪶, like a 🪶, like a 🪶\n<span style='color:#008080'>&lt;Bridge&gt;</span>\nYou want me? I'm done\nYou miss me? No duh\nWhere I'm at, I'm up where I'm at\nYou want me? I'm done (I'm done)\nYou miss me? No duh (No duh)\nWhere I'm at, I'm up (I'm up) where I'm at\n\n<span style='color:#008080'>&lt;Outro&gt;</span>\nYou want me? I'm done\n(I feel so much lighter like a 🪶 with you off my mind)\nYou miss me? No duh\nWhere I'm at, I'm up where I'm at\n(Like a 🪶, like a 🪶, like a 🪶)\nYou want me? I'm done\n(I feel so much lighter like a 🪶 with you off my mind)\nYou miss me? No duh\nWhere I'm at, I'm up where I'm at\n(Like a 🪶, like a 🪶, like a 🪶, yeah)\n</pre>\n:::\n\n\n\nAs for where the teal coloring comes from, eh, turns out you can do a lot with [knitr hooks](/posts/2023-12-30_knitr-hooks/) if you're bored.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}